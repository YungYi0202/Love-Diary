{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Calendar/AddForm.js\",\n    _s = $RefreshSig$();\n\nimport { Form, DatePicker, TimePicker, Radio, Input, Checkbox, Modal, Switch, Menu, Dropdown } from 'antd';\nimport { useState } from 'react';\nimport moment from 'moment';\nimport \"./AddForm.css\";\nimport { HeartOutlined, DownOutlined, TagsOutlined } from '@ant-design/icons';\nconst {\n  RangePicker\n} = DatePicker;\nconst {\n  RangePicker2\n} = TimePicker;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\n\nfunction valid(startTime, endTime) {\n  if (startTime === '' || endTime === '') return false;\n  return true;\n}\n\nfunction AddForm({\n  show,\n  handleClose,\n  addEvent,\n  addTodoEvent\n}) {\n  _s();\n\n  const [allDay, setAllDay] = useState(false);\n  const [color, setColor] = useState('');\n  const [colorStr, setColorStr] = useState('select color');\n  const [title, setTitle] = useState('');\n  const [timeVal, setTimeVal] = useState(null);\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [todo, setTodo] = useState(false);\n  const [fav, setFav] = useState(false);\n  const colorOptions = [{\n    label: 'blue',\n    value: 'blue'\n  }, {\n    label: 'red',\n    value: 'red'\n  }, {\n    label: 'green',\n    value: 'green'\n  }];\n\n  const color_onChange = e => {\n    setColor(e.target.value);\n  };\n\n  const allDay_onChange = e => {\n    setAllDay(e.target.checked);\n  };\n\n  const todo_onChange = e => {\n    setTodo(e.target.checked);\n  };\n\n  const fav_onChange = checked => {\n    setFav(checked);\n  };\n\n  const time_onChange = (val, str) => {\n    setTimeVal(val); //console.log(str);\n    //console.log(\"start\"+startTime);\n    //console.log(str[0].substr(0,10) + \"T\" + str[0].substr(11,8));\n\n    if (allDay) {\n      setStartTime(str[0]);\n      const end = moment(str[1]).add(1, \"days\");\n      setEndTime(end.format(\"YYYY-MM-DD\"));\n    } else {\n      //可以跨日\n      //setStartTime(str[0].substr(0,10) + \"T\" + str[0].substr(11,8));\n      //setEndTime(str[1].substr(0,10) + \"T\" + str[1].substr(11,8));\n      //不能跨日\n      setStartTime(str[0]);\n      setEndTime(str[1]);\n    }\n  };\n\n  const onFinish = () => {\n    // Should format date value before submit.\n    if (todo) {\n      addTodoEvent(title, color);\n      handleClose();\n    } else if (valid(startTime, endTime)) {\n      addEvent(allDay, startTime, endTime, color, title, fav);\n      handleClose();\n    } else {\n      alert(\"Please select time\");\n    }\n  };\n\n  function Time() {\n    if (allDay) {\n      return /*#__PURE__*/_jsxDEV(RangePicker, {\n        format: \"YYYY-MM-DD\",\n        value: timeVal,\n        onChange: time_onChange,\n        disabled: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(RangePicker, {\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\",\n        value: timeVal,\n        onChange: time_onChange,\n        disabled: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 16\n      }, this);\n    }\n  }\n\n  const colorTable = [{\n    no: \"#F78C98\",\n    str: \"Red\"\n  }, {\n    no: \"#F1A559\",\n    str: \"Orange\"\n  }, {\n    no: \"#FCD616\",\n    str: \"Yellow\"\n  }, {\n    no: \"#95D968\",\n    str: \"Green\"\n  }, {\n    no: \"#85D4D5\",\n    str: \"Light Blue\"\n  }, {\n    no: \"#5891ED\",\n    str: \"Baby Blue\"\n  }, {\n    no: \"#CD9FF3\",\n    str: \"Purple\"\n  }, {\n    no: \"#BF9C86\",\n    str: \"Brown\"\n  }, {\n    no: \"#8C8C8C\",\n    str: \"Grey\"\n  }];\n\n  const color_onClick = ({\n    key\n  }) => {\n    setColor(colorTable[key].no);\n    setColorStr(colorTable[key].str);\n  };\n\n  const menu = /*#__PURE__*/_jsxDEV(Menu, {\n    onClick: color_onClick,\n    children: colorTable.map((ele, i) => /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: ele.str\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 7\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    visible: show,\n    onCancel: handleClose,\n    onOk: onFinish,\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n      className: \"addform\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"range-time-picker\",\n        label: \"Time\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: allDay_onChange,\n          disabled: todo,\n          children: \"All Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: todo_onChange,\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Time, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        /*name=\"color\"*/\n        label: \"Color\",\n        rules: [{\n          required: true,\n          message: 'Please select color!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          overlay: menu,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"ant-dropdown-link\",\n            onClick: e => e.preventDefault(),\n            children: [colorStr, /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Favorite\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          checkedChildren: /*#__PURE__*/_jsxDEV(HeartOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 40\n          }, this),\n          onChange: fav_onChange,\n          disabled: todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Title\"\n        /*name=\"title\"*/\n        ,\n        rules: [{\n          required: true,\n          message: 'Please input your title!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AddForm, \"FsZ4nfq4GqYo/HnMZK7709UMifw=\");\n\n_c = AddForm;\n;\nexport default AddForm;\n/*\n<Radio.Group\n              options={colorOptions}\n              onChange={color_onChange}\n              value={color}\n              optionType=\"button\"\n              //disabled={todo}\n              />\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"AddForm\");","map":{"version":3,"sources":["/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Calendar/AddForm.js"],"names":["Form","DatePicker","TimePicker","Radio","Input","Checkbox","Modal","Switch","Menu","Dropdown","useState","moment","HeartOutlined","DownOutlined","TagsOutlined","RangePicker","RangePicker2","formItemLayout","labelCol","xs","span","sm","wrapperCol","valid","startTime","endTime","AddForm","show","handleClose","addEvent","addTodoEvent","allDay","setAllDay","color","setColor","colorStr","setColorStr","title","setTitle","timeVal","setTimeVal","setStartTime","setEndTime","todo","setTodo","fav","setFav","colorOptions","label","value","color_onChange","e","target","allDay_onChange","checked","todo_onChange","fav_onChange","time_onChange","val","str","end","add","format","onFinish","alert","Time","colorTable","no","color_onClick","key","menu","map","ele","i","required","message","preventDefault","offset"],"mappings":"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","sourcesContent":["import { Form, DatePicker, TimePicker, Radio, Input, Checkbox, Modal, Switch, Menu, Dropdown} from 'antd';\nimport { useState } from 'react';\nimport moment from 'moment';\nimport \"./AddForm.css\"\nimport { HeartOutlined ,  DownOutlined, TagsOutlined } from '@ant-design/icons';\n\nconst { RangePicker } = DatePicker;\nconst { RangePicker2 } = TimePicker;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\n\nfunction valid(startTime, endTime){\n\n  if(startTime==='' ||endTime==='') return false;\n  return true;\n}\n\nfunction AddForm({show, handleClose, addEvent, addTodoEvent}){\n    const [allDay, setAllDay] = useState(false);\n    const [color, setColor] = useState('');\n    const [colorStr, setColorStr] = useState('select color');\n    const [title, setTitle] = useState('');\n    const [timeVal, setTimeVal] = useState(null);\n    const [startTime, setStartTime] = useState('');\n    const [endTime, setEndTime] = useState('');\n    const [todo, setTodo] = useState(false);\n    const [fav, setFav] = useState(false);\n\n    const colorOptions = [\n        { label: 'blue', value: 'blue' },\n        { label: 'red', value: 'red' },\n        { label: 'green', value: 'green' },\n    ];\n\n    const color_onChange = e => {\n        setColor(e.target.value);\n    };\n\n    const allDay_onChange = e =>{\n      setAllDay(e.target.checked);\n    };\n\n    const todo_onChange = e =>{\n      setTodo(e.target.checked);\n    };\n\n    const fav_onChange = checked => {\n      setFav(checked);\n    }\n\n    const time_onChange = (val, str) =>{\n      setTimeVal(val);\n      //console.log(str);\n      //console.log(\"start\"+startTime);\n      //console.log(str[0].substr(0,10) + \"T\" + str[0].substr(11,8));\n      if(allDay){\n        setStartTime(str[0]);\n        const end = moment(str[1]).add(1,\"days\");\n        setEndTime(end.format(\"YYYY-MM-DD\"));\n      }else{\n        //可以跨日\n        //setStartTime(str[0].substr(0,10) + \"T\" + str[0].substr(11,8));\n        //setEndTime(str[1].substr(0,10) + \"T\" + str[1].substr(11,8));\n        //不能跨日\n        setStartTime(str[0]);\n        setEndTime(str[1]);\n      }\n      \n    }\n\n    const onFinish = () => {\n      // Should format date value before submit.\n      if(todo){\n        addTodoEvent(title, color);\n        handleClose();\n      }\n      else if(valid(startTime, endTime)){\n        addEvent(allDay, startTime, endTime, color, title, fav);\n        handleClose();\n      }else{\n        alert(\"Please select time\");\n      }\n    };\n\n    function Time(){\n      if(allDay){\n        return <RangePicker format=\"YYYY-MM-DD\" value={timeVal} onChange={time_onChange} disabled={todo}/>;\n      }else{\n        return <RangePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" value={timeVal} onChange={time_onChange} disabled={todo}/>;\n      }\n    }\n\n    const colorTable = [\n      {no: \"#F78C98\", str: \"Red\"},\n      {no: \"#F1A559\", str: \"Orange\"},\n      {no: \"#FCD616\", str: \"Yellow\"},\n      {no: \"#95D968\", str: \"Green\"},\n      {no: \"#85D4D5\", str: \"Light Blue\"},\n      {no: \"#5891ED\", str: \"Baby Blue\"},\n      {no: \"#CD9FF3\", str: \"Purple\"},\n      {no: \"#BF9C86\", str: \"Brown\"},\n      {no: \"#8C8C8C\", str: \"Grey\"},\n    ]\n\n    const color_onClick = ({ key }) => {\n      setColor(colorTable[key].no);\n      setColorStr(colorTable[key].str);\n    };\n\n    const menu = (\n      <Menu onClick={color_onClick}>\n        {colorTable.map((ele,i)=>\n          <Menu.Item key={i}>{ele.str}</Menu.Item>\n        )}\n      </Menu>\n    );\n\n    return (\n      <Modal visible={show} onCancel={handleClose} onOk={onFinish} className=\"modal\">\n        <Form  {...formItemLayout} className=\"addform\">\n            <Form.Item name=\"range-time-picker\" label=\"Time\"  >\n              <Checkbox onChange={allDay_onChange} disabled={todo} >All Day</Checkbox>\n              <Checkbox onChange={todo_onChange} >Todo</Checkbox>\n              <Time></Time>\n            </Form.Item>\n\n            <Form.Item /*name=\"color\"*/ label=\"Color\" rules={[{ required: true, message: 'Please select color!' }]}>\n            <Dropdown overlay={menu}>\n              <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                {colorStr}<DownOutlined />\n              </a>\n            </Dropdown>\n            </Form.Item>\n      \n            <Form.Item label=\"Favorite\">\n              <Switch checkedChildren={<HeartOutlined />} onChange={fav_onChange} disabled={todo}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Title\"\n                /*name=\"title\"*/\n                rules={[{ required: true, message: 'Please input your title!' }]}\n            >\n                <Input value={title} onChange={(e) => setTitle(e.target.value)} />\n            </Form.Item>\n\n            <Form.Item\n            wrapperCol={{\n                xs: { span: 24, offset: 0 },\n                sm: { span: 16, offset: 8 },\n            }}\n            >\n            </Form.Item>\n        </Form>\n      </Modal>\n    );\n};\n\nexport default AddForm\n\n\n/*\n<Radio.Group\n              options={colorOptions}\n              onChange={color_onChange}\n              value={color}\n              optionType=\"button\"\n              //disabled={todo}\n              />\n*/"]},"metadata":{},"sourceType":"module"}