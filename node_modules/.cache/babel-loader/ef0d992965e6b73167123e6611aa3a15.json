{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Calendar/FullCalendar.js\",\n    _s = $RefreshSig$();\n\nimport './FullCalendar.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport AddFormButton from './AddFormButton'; //let todayStr = new Date().toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\n\nimport moment from 'moment';\nimport { RoughNotation } from \"react-rough-notation\";\nimport axios from 'axios';\nconst API_ROOT = 'http://localhost:4000/api';\nconst instance = axios.create({\n  baseURL: API_ROOT\n});\n/*\n        accountInfo:{\n            accountId: acc_id,\n            name1: name1,\n            name2: name2,\n            startDate: date\n        }\n*/\n\nexport default function FullCal({\n  accountId\n}) {\n  _s();\n\n  const [currentEvents, setCurrentEvents] = useState([]);\n  const [selectedStr, setSelectedStr] = useState([]);\n  const [dayEvents, setDayEvents] = useState([]);\n  const [todoEvents, setTodoEvents] = useState([]);\n  const calendarAPI = useRef(null);\n\n  const handleDateSelect = selectInfo => {\n    setSelectedStr([selectInfo.startStr, selectInfo.endStr]);\n\n    _getDayEvents(selectInfo.startStr, selectInfo.endStr);\n  };\n\n  function isOverlapped(start, end) {\n    if (start < selectedStr[0] && end < selectedStr[1] || start > selectedStr[0] && end > selectedStr[1]) {\n      return false;\n    } else return true;\n  }\n\n  const handleEventClick = clickInfo => {\n    if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove(); //console.log(!( (clickInfo.event.startStr < selectedStr[0] && clickInfo.event.endStr < selectedStr[1]) || (clickInfo.event.startStr > selectedStr[0] && clickInfo.event.endStr > selectedStr[1]) ))\n\n      if (isOverlapped(clickInfo.event.startStr, clickInfo.event.endStr)) {\n        var newDay = dayEvents.filter(e => e._id !== clickInfo.event._def.extendedProps._id);\n        setDayEvents(newDay);\n        setSelectedStr(selectedStr); //用這個觸發rerender\n      }\n    }\n  };\n\n  const handleEvents = events => {\n    setCurrentEvents(events);\n  };\n\n  const addEvent = (isAllDay, startTime, endTime, color, title, fav) => {\n    let calendarApi = calendarAPI.current.getApi();\n\n    if (title) {\n      if (isAllDay) {\n        calendarApi.addEvent({\n          title,\n          start: startTime,\n          end: endTime,\n          backgroundColor: color,\n          borderColor: color,\n          textColor: \"white\",\n          favorite: fav\n        });\n      } else {\n        calendarApi.addEvent({\n          title,\n          start: startTime,\n          end: endTime,\n          backgroundColor: \"white\",\n          borderColor: color,\n          textColor: color,\n          favorite: fav\n        });\n      }\n    }\n  };\n\n  const _getEvents = async () => {\n    const {\n      data: {\n        message,\n        events\n      }\n    } = await instance.get('/getEvents', {\n      params: {\n        accountId\n      }\n    });\n    return events;\n  };\n\n  const _getDayEvents = async (dayStart, dayEnd) => {\n    const {\n      data: {\n        message,\n        events\n      }\n    } = await instance.get('/getDayEvents', {\n      params: {\n        accountId,\n        dayStart,\n        dayEnd\n      }\n    });\n    /*if(events.length > 0){\n      console.log(events[0]);\n      console.log(events[0].start);\n    }*/\n    //console.log(events);\n\n    setDayEvents(events);\n  };\n\n  const _eventsAdd = async addInfo => {\n    //console.log(addInfo);\n    //var accountId = accountInfo.accountId;\n    const favorite = addInfo.event._def.extendedProps.favorite;\n    const {\n      data: {\n        message,\n        event\n      }\n    } = await instance.post('/addEvent', {\n      params: {\n        accountId,\n        addInfo,\n        favorite\n      }\n    });\n\n    if (message === 'error') {\n      console.log(\"_eventsAdd error\");\n    }\n\n    if (isOverlapped(addInfo.event.startStr, addInfo.event.endStr)) {\n      setDayEvents([...dayEvents, event]);\n    }\n  };\n\n  const _eventsRemove = async removeInfo => {\n    const _id = removeInfo.event._def.extendedProps._id;\n    const {\n      data: {\n        message\n      }\n    } = await instance.post('/removeEvent', {\n      params: {\n        _id\n      }\n    });\n\n    if (message === 'error') {\n      console.log(\"_eventsRemove error\");\n    }\n  };\n\n  function getSchemaEvent(eventApi) {\n    var event = {\n      accountId: eventApi._def.extendedProps.accountId,\n      todo: eventApi._def.extendedProps.todo,\n      favorite: eventApi._def.extendedProps.favorite,\n      title: eventApi._def.title,\n      start: eventApi.startStr,\n      end: eventApi.endStr,\n      textColor: eventApi.textColor,\n      borderColor: eventApi.borderColor,\n      backgroundColor: eventApi.backgroundColor\n    };\n    return event;\n  }\n\n  const _eventDrop = async eventDropInfo => {\n    const _id = eventDropInfo.oldEvent._def.extendedProps._id;\n    const newStart = eventDropInfo.event.startStr;\n    const newEnd = eventDropInfo.event.endStr;\n    const {\n      data: {\n        message\n      }\n    } = await instance.post('/dropEvent', {\n      params: {\n        _id,\n        newStart,\n        newEnd\n      }\n    });\n\n    if (message === 'error') {\n      console.log(\"_eventsDrop error\");\n    }\n\n    var newOverlapped = isOverlapped(newStart, newEnd);\n    var oldOverlapped = isOverlapped(eventDropInfo.oldEvent.startStr, eventDropInfo.oldEvent.endStr);\n\n    if (newOverlapped === true && oldOverlapped === false) {\n      var tmp = currentEvents.filter(e => e._def.extendedProps._id === _id);\n      var event = getSchemaEvent(tmp[0]);\n      setDayEvents([...dayEvents, event]);\n    } else if (newOverlapped === false && oldOverlapped === true) {\n      var newDay = dayEvents.filter(e => e._id !== _id);\n      setDayEvents(newDay);\n    }\n  };\n\n  const addTodoEvent = async (title, color) => {\n    var event = {\n      title: title,\n      color: color\n    };\n    const {\n      data: {\n        message,\n        todoEvent\n      }\n    } = await instance.post('/addTodoEvent', {\n      params: {\n        accountId,\n        event\n      }\n    });\n\n    if (message === 'error') {\n      console.log(\"addTodoEvent error\");\n    }\n\n    setTodoEvents([...todoEvents, todoEvent]);\n  };\n\n  const _eventReceive = async info => {\n    while (1) {\n      if (info.draggedEl.parentNode !== null) {\n        var event = info.event; //console.log(event);\n        //var accountId = accountInfo.accountId;\n\n        const {\n          data: {\n            message\n          }\n        } = await instance.post('/receiveEvent', {\n          params: {\n            accountId,\n            event\n          }\n        });\n\n        if (message === 'error') {\n          console.log(\"_eventsReceive error\");\n        } //remove the todo event from todoEvent\n\n\n        _eventsRemove(info);\n\n        if (isOverlapped(event.startStr, event.endStr)) {\n          var e = getSchemaEvent(event);\n          setDayEvents([...dayEvents, e]);\n        } // remove the element from the \"Draggable Events\" list\n\n\n        info.draggedEl.parentNode.removeChild(info.draggedEl);\n        break;\n      }\n    }\n  };\n\n  const _getTodoEvents = async () => {\n    const {\n      data: {\n        message,\n        events\n      }\n    } = await instance.get('/getTodoEvents', {\n      params: {\n        accountId\n      }\n    });\n    setTodoEvents(events);\n  }; //for draggable todo events\n\n\n  useEffect(() => {\n    let draggableEl = document.getElementById(\"external-events\");\n    new Draggable(draggableEl, {\n      itemSelector: \".todoitem\",\n      eventData: function (eventEl) {\n        let title = eventEl.getAttribute(\"title\");\n\n        let _id = eventEl.getAttribute(\"data\");\n\n        let color = eventEl.getAttribute(\"color\");\n        return {\n          title: title,\n          _id: _id,\n          //id不知道能不能拿掉，怕draggable的地方會錯\n          color: color\n        };\n      }\n    });\n  }, []); //initialization\n\n  useEffect(() => {\n    _getTodoEvents();\n\n    let todayStr = new Date().toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\n\n    const todayStr2 = moment(todayStr).add(1, \"days\").format(\"YYYY-MM-DD\");\n    console.log(\"today:\" + todayStr);\n    var tmp = moment().format(\"YYYY-MM-DD\");\n    console.log(tmp);\n    setSelectedStr([todayStr, todayStr2]);\n\n    _getDayEvents(todayStr, todayStr2);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boook\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttons now\",\n        disabled: \"false\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/Calendar\",\n          children: \"Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/Diary\",\n          children: \"Diary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boookleft calleft\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar\",\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          id: \"myFullCalendar\",\n          ref: calendarAPI,\n          plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n          headerToolbar: {\n            left: 'prev,next today',\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n          },\n          initialView: \"dayGridMonth\",\n          editable: true //可以移動事件\n          ,\n          selectable: true,\n          selectMirror: true,\n          dayMaxEvents: true,\n          initialEvents: _getEvents // alternatively, use the `events` setting to fetch from a feed\n          ,\n          select: handleDateSelect,\n          eventContent: renderEventContent // custom render function\n          ,\n          eventClick: handleEventClick,\n          eventsSet: handleEvents // called after events are initialized/added/changed/removed\n          ,\n          eventDisplay: \"block\",\n          eventAdd: _eventsAdd,\n          eventRemove: _eventsRemove,\n          eventDrop: _eventDrop,\n          eventChange: _eventDrop,\n          aspectRatio: 1.33,\n          eventReceive: _eventReceive\n          /* you can update a remote database when these fire:\n          eventAdd={function(){}}\n          eventChange={function(){}}\n          eventRemove={function(){}}\n          */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boookright calright\",\n      children: [/*#__PURE__*/_jsxDEV(AddFormButton, {\n        addEvent: addEvent,\n        addTodoEvent: addTodoEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dayEventsList__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-form\",\n          children: [/*#__PURE__*/_jsxDEV(RoughNotation, {\n            type: \"highlight\",\n            show: \"true\",\n            className: \"title\",\n            color: \" rgb(190, 226, 229)\",\n            animationDelay: \"1000\",\n            children: \"EVENTS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subtitle\",\n            children: [\"Date : \", selectedStr[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"dayEventsList\",\n          className: \"eventlist\",\n          children: dayEvents.map((ele, i) => ele.favorite ? /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"dayEventsList__item\",\n            className: \"event\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"dayEventsList__item-time\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-star\",\n                id: \"favIcon\" + i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 56\n              }, this), //可以跨日版本\n              ele.start.length === 10 || ele.start < selectedStr[0] && ele.end > selectedStr[1] ? \"       All-Day\" : ele.start >= selectedStr[0] && ele.end <= selectedStr[1] ? ele.start.substr(11, 5) + \"~\" + ele.end.substr(11, 5) : ele.start < selectedStr[0] ? \"00:00~\" + ele.end.substr(11, 5) : ele.start.substr(11, 5) + \"~24:00\", \" : \", ele.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this)\n          }, i + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this) :\n          /*#__PURE__*/\n          //----------------------------------------\n          _jsxDEV(\"div\", {\n            id: \"dayEventsList__item\",\n            className: \"event\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"dayEventsList__item-time\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"far fa-star\",\n                id: \"favIcon\" + i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 54\n              }, this), //可以跨日版本\n              ele.start.length === 10 || ele.start < selectedStr[0] && ele.end > selectedStr[1] ? \"       All-Day\" : ele.start >= selectedStr[0] && ele.end <= selectedStr[1] ? ele.start.substr(11, 5) + \"~\" + ele.end.substr(11, 5) : ele.start < selectedStr[0] ? \"00:00~\" + ele.end.substr(11, 5) : ele.start.substr(11, 5) + \"~24:00\", \" : \", ele.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this)\n          }, i + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"external-events\",\n        className: \"todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-form\",\n          children: [/*#__PURE__*/_jsxDEV(RoughNotation, {\n            type: \"highlight\",\n            show: \"true\",\n            className: \"title\",\n            color: \" rgb(190, 226, 229)\",\n            animationDelay: \"2000\",\n            children: \"TODO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RoughNotation, {\n            type: \"circle\",\n            show: \"true\",\n            className: \"subtitle\",\n            color: \" rgb(51, 173, 255)\",\n            animationDelay: \"3000\",\n            children: \"drag it !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), todoEvents.map((event, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoitem\",\n          title: event.title,\n          data: event._id,\n          color: event.color,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-angle-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 17\n          }, this), \" \", event.title]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FullCal, \"ve0bNcHkzc7vbo7PYjJWgdb6OCc=\");\n\n_c = FullCal;\n\nfunction renderEventContent(eventInfo) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: [eventInfo.timeText, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: eventInfo.event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // function renderSidebarEvent(event) {\n//   return (\n//     <li key={event.id}>\n//       <b>{formatDate(event.start, {year: 'numeric', month: 'short', day: 'numeric'})}</b>\n//       <i>{event.title}</i>\n//     </li>\n//   )\n// }\n\n\nvar _c;\n\n$RefreshReg$(_c, \"FullCal\");","map":{"version":3,"sources":["/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Calendar/FullCalendar.js"],"names":["React","useState","useEffect","useRef","NavLink","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","Draggable","AddFormButton","moment","RoughNotation","axios","API_ROOT","instance","create","baseURL","FullCal","accountId","currentEvents","setCurrentEvents","selectedStr","setSelectedStr","dayEvents","setDayEvents","todoEvents","setTodoEvents","calendarAPI","handleDateSelect","selectInfo","startStr","endStr","_getDayEvents","isOverlapped","start","end","handleEventClick","clickInfo","window","confirm","event","title","remove","newDay","filter","e","_id","_def","extendedProps","handleEvents","events","addEvent","isAllDay","startTime","endTime","color","fav","calendarApi","current","getApi","backgroundColor","borderColor","textColor","favorite","_getEvents","data","message","get","params","dayStart","dayEnd","_eventsAdd","addInfo","post","console","log","_eventsRemove","removeInfo","getSchemaEvent","eventApi","todo","_eventDrop","eventDropInfo","oldEvent","newStart","newEnd","newOverlapped","oldOverlapped","tmp","addTodoEvent","todoEvent","_eventReceive","info","draggedEl","parentNode","removeChild","_getTodoEvents","draggableEl","document","getElementById","itemSelector","eventData","eventEl","getAttribute","todayStr","Date","toISOString","replace","todayStr2","add","format","left","center","right","renderEventContent","map","ele","i","length","substr","eventInfo","timeText"],"mappings":"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","sourcesContent":["import './FullCalendar.css'\nimport React, { useState, useEffect , useRef} from 'react'\nimport { NavLink } from \"react-router-dom\";\nimport FullCalendar, { formatDate } from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport AddFormButton from './AddFormButton'\n//let todayStr = new Date().toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\nimport moment from 'moment';\nimport { RoughNotation } from \"react-rough-notation\"\n\nimport axios from 'axios'\nconst API_ROOT = 'http://localhost:4000/api'\nconst instance = axios.create({\n  baseURL: API_ROOT\n})\n/*\n        accountInfo:{\n            accountId: acc_id,\n            name1: name1,\n            name2: name2,\n            startDate: date\n        }\n*/\nexport default function FullCal({accountId}){\n  const [currentEvents, setCurrentEvents] = useState([]);\n  const [selectedStr, setSelectedStr] = useState([]);\n  const [dayEvents, setDayEvents] = useState([]);\n  const [todoEvents, setTodoEvents] = useState([]);\n  const calendarAPI = useRef(null);\n\n  const handleDateSelect = (selectInfo) => {\n    setSelectedStr([selectInfo.startStr, selectInfo.endStr]);\n    _getDayEvents(selectInfo.startStr, selectInfo.endStr);\n  }\n\n  function isOverlapped(start, end){\n    if( (start < selectedStr[0] && end < selectedStr[1]) || (start > selectedStr[0] && end > selectedStr[1]) ){\n      return false;\n    }else return true;\n  }\n\n  const handleEventClick = (clickInfo) => {\n    if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove()\n      //console.log(!( (clickInfo.event.startStr < selectedStr[0] && clickInfo.event.endStr < selectedStr[1]) || (clickInfo.event.startStr > selectedStr[0] && clickInfo.event.endStr > selectedStr[1]) ))\n      if(isOverlapped(clickInfo.event.startStr, clickInfo.event.endStr)){\n        var newDay = dayEvents.filter(e => e._id!==clickInfo.event._def.extendedProps._id)\n        setDayEvents(newDay);\n        setSelectedStr(selectedStr);//用這個觸發rerender\n      }\n    }\n  }\n\n  const handleEvents = (events) => {\n    setCurrentEvents(events);\n  }\n\n  const addEvent = (isAllDay, startTime, endTime, color, title, fav ) =>{\n    let calendarApi = calendarAPI.current.getApi();\n    if (title) {\n      if(isAllDay){\n        calendarApi.addEvent({\n          title,\n          start: startTime ,\n          end: endTime ,\n          backgroundColor: color,\n          borderColor: color,\n          textColor: \"white\",\n          favorite: fav\n        })\n      }else{\n        calendarApi.addEvent({\n          title,\n          start: startTime,\n          end: endTime ,\n          backgroundColor: \"white\",\n          borderColor: color,\n          textColor: color,\n          favorite: fav\n        });\n      }\n    }\n  }\n\n  const _getEvents = async()=>{\n    const {\n      data: { message, events }\n    } = await instance.get('/getEvents', { params: { accountId } });\n    return events;\n  }\n\n  const _getDayEvents = async(dayStart, dayEnd)=>{\n    const {\n      data: { message, events }\n    } = await instance.get('/getDayEvents', { params: { accountId, dayStart, dayEnd } });\n    /*if(events.length > 0){\n      console.log(events[0]);\n      console.log(events[0].start);\n    }*/\n    //console.log(events);\n    setDayEvents(events);\n  }\n\n  const _eventsAdd = async(addInfo)=>{\n    //console.log(addInfo);\n    //var accountId = accountInfo.accountId;\n    const favorite = addInfo.event._def.extendedProps.favorite;\n    const {\n      data: { message , event}\n    } = await instance.post('/addEvent', { params: { accountId, addInfo , favorite} })\n    if(message==='error'){\n      console.log(\"_eventsAdd error\");\n    }\n    if(isOverlapped(addInfo.event.startStr, addInfo.event.endStr )){\n      setDayEvents([...dayEvents, event]);\n    }\n  }\n\n  const _eventsRemove = async(removeInfo)=>{\n    const _id = removeInfo.event._def.extendedProps._id;\n    const {\n      data: { message }\n    } = await instance.post('/removeEvent', { params: { _id } })\n    if(message==='error'){\n      console.log(\"_eventsRemove error\");\n    }\n  }\n\n  function getSchemaEvent(eventApi){\n    var event = {\n      accountId : eventApi._def.extendedProps.accountId,\n      todo : eventApi._def.extendedProps.todo,\n      favorite : eventApi._def.extendedProps.favorite,\n      title : eventApi._def.title,\n      start : eventApi.startStr,\n      end : eventApi.endStr,\n      textColor : eventApi.textColor,\n      borderColor : eventApi.borderColor,\n      backgroundColor: eventApi.backgroundColor\n    }\n    return event;\n  }\n  \n  const _eventDrop = async(eventDropInfo)=>{\n    const _id = eventDropInfo.oldEvent._def.extendedProps._id;\n    const newStart = eventDropInfo.event.startStr\n    const newEnd = eventDropInfo.event.endStr\n    const {\n      data: { message }\n    } = await instance.post('/dropEvent', { params: { _id, newStart, newEnd } })\n    if(message==='error'){\n      console.log(\"_eventsDrop error\");\n    }\n    var newOverlapped = isOverlapped(newStart, newEnd);\n    var oldOverlapped = isOverlapped(eventDropInfo.oldEvent.startStr, eventDropInfo.oldEvent.endStr);\n    if(newOverlapped === true && oldOverlapped === false){\n      var tmp = currentEvents.filter(e => e._def.extendedProps._id === _id);\n      var event = getSchemaEvent(tmp[0]);\n      setDayEvents([...dayEvents, event]);\n    }else if(newOverlapped === false && oldOverlapped === true){\n      var newDay = dayEvents.filter(e => e._id !== _id)\n      setDayEvents(newDay);\n    }\n  }\n\n  \n  const addTodoEvent = async(title, color)=>{\n    var event = {title: title, color: color};\n    const {\n      data: { message , todoEvent}\n    } = await instance.post('/addTodoEvent', { params: { accountId, event } })\n    if(message==='error'){\n      console.log(\"addTodoEvent error\");\n    }\n    setTodoEvents([...todoEvents, todoEvent]);\n    \n  }\n\n  const _eventReceive = async(info) => {\n      while(1){\n        if(info.draggedEl.parentNode !== null ){\n          var event = info.event;\n          //console.log(event);\n          //var accountId = accountInfo.accountId;\n          const {\n            data: { message }\n          } = await instance.post('/receiveEvent', { params: { accountId, event } })\n          if(message==='error'){\n            console.log(\"_eventsReceive error\");\n          }\n          //remove the todo event from todoEvent\n          _eventsRemove(info);\n\n          if(isOverlapped(event.startStr, event.endStr)){\n            var e = getSchemaEvent(event);\n            setDayEvents([...dayEvents, e]);\n          }\n          // remove the element from the \"Draggable Events\" list\n          info.draggedEl.parentNode.removeChild(info.draggedEl);\n          break;\n        }\n      }\n  }\n\n  const _getTodoEvents = async () =>{\n    const {\n      data: { message, events }\n    } = await instance.get('/getTodoEvents', { params: { accountId } });\n    setTodoEvents(events);\n  }\n\n  //for draggable todo events\n  useEffect(() => {\n    let draggableEl = document.getElementById(\"external-events\");\n    new Draggable(draggableEl, {\n      itemSelector: \".todoitem\",\n      eventData: function(eventEl) {\n        let title = eventEl.getAttribute(\"title\");\n        let _id = eventEl.getAttribute(\"data\");\n        let color = eventEl.getAttribute(\"color\");\n        return {\n          title: title,\n          _id: _id, //id不知道能不能拿掉，怕draggable的地方會錯\n          color: color\n        };\n      }\n    });\n  },[]);\n\n  //initialization\n  useEffect(() => {\n    _getTodoEvents();\n    let todayStr = new Date().toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\n    const todayStr2 = moment(todayStr).add(1,\"days\").format(\"YYYY-MM-DD\");\n    console.log(\"today:\"+todayStr);\n    var tmp = moment().format(\"YYYY-MM-DD\");\n    console.log(tmp)\n    setSelectedStr([todayStr, todayStr2]);\n    _getDayEvents(todayStr, todayStr2);\n  }, [])\n\n\n  return (\n    <div className='boook'>\n      <div className=\"list\">\n          <button className='buttons'>\n            <NavLink to=\"/\">Home</NavLink>\n          </button>\n          <p></p>\n          <button className='buttons now' disabled=\"false\">\n            <NavLink to=\"/Calendar\">Calendar</NavLink>\n          </button>\n          <p></p>\n          <button className='buttons'>\n              <NavLink to=\"/Diary\">Diary</NavLink>\n          </button>\n      </div>\n      <div className='boookleft calleft'>\n        <div className=\"calendar\">\n          <FullCalendar\n            id = \"myFullCalendar\"\n            ref = {calendarAPI}\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            headerToolbar={{\n              left: 'prev,next today',\n              center: 'title',\n              right: 'dayGridMonth,timeGridWeek,timeGridDay'\n            }}\n            initialView='dayGridMonth'\n            editable={true} //可以移動事件\n            selectable={true}\n            selectMirror={true}\n            dayMaxEvents={true}\n            initialEvents={_getEvents} // alternatively, use the `events` setting to fetch from a feed\n            select={handleDateSelect}\n            eventContent={renderEventContent} // custom render function\n            eventClick={handleEventClick}\n            eventsSet={handleEvents} // called after events are initialized/added/changed/removed\n            eventDisplay='block'\n            eventAdd={_eventsAdd}\n            eventRemove={_eventsRemove}\n            eventDrop={_eventDrop}\n            eventChange={_eventDrop}\n            aspectRatio={1.33}\n            eventReceive={_eventReceive}\n            /* you can update a remote database when these fire:\n            eventAdd={function(){}}\n            eventChange={function(){}}\n            eventRemove={function(){}}\n            */\n          />\n        </div>\n      </div>\n      <div className='boookright calright'>\n        <AddFormButton addEvent={addEvent} addTodoEvent={addTodoEvent}></AddFormButton>\n        <div className=\"dayEventsList__container\">\n            <div className=\"title-form\">\n              <RoughNotation type=\"highlight\" show=\"true\" className=\"title\" color=\" rgb(190, 226, 229)\" animationDelay=\"1000\">EVENTS</RoughNotation>\n              <div className=\"subtitle\">Date : {selectedStr[0]}</div>\n            </div>\n            <ul id=\"dayEventsList\" className=\"eventlist\">\n              {dayEvents.map((ele,i)=>(\n                ele.favorite ?\n                <div key={i+1} id=\"dayEventsList__item\" className=\"event\">\n                  <div id=\"dayEventsList__item-time\" > <i class=\"fas fa-star\" id={\"favIcon\"+i}></i>{\n                  //可以跨日版本\n                  (ele.start.length===10 || ele.start < selectedStr[0] && ele.end > selectedStr[1])? \"       All-Day\":\n                  (ele.start >= selectedStr[0] && ele.end <= selectedStr[1])?ele.start.substr(11,5)+\"~\"+ele.end.substr(11,5):\n                  (ele.start < selectedStr[0])? \"00:00~\"+ele.end.substr(11,5):ele.start.substr(11,5)+\"~24:00\"\n                  } : {ele.title}</div>\n                </div> : //----------------------------------------\n                <div key={i+1} id=\"dayEventsList__item\" className=\"event\">\n                <div id=\"dayEventsList__item-time\" > <i class=\"far fa-star\" id={\"favIcon\"+i}></i>{\n                //可以跨日版本\n                (ele.start.length===10 || ele.start < selectedStr[0] && ele.end > selectedStr[1])? \"       All-Day\":\n                (ele.start >= selectedStr[0] && ele.end <= selectedStr[1])?ele.start.substr(11,5)+\"~\"+ele.end.substr(11,5):\n                (ele.start < selectedStr[0])? \"00:00~\"+ele.end.substr(11,5):ele.start.substr(11,5)+\"~24:00\"\n                } : {ele.title}</div>\n                </div>))\n              }\n            </ul>\n          </div>\n        <div id=\"external-events\" className=\"todo\">\n            <div className=\"title-form\">\n            <RoughNotation type=\"highlight\" show=\"true\" className=\"title\" color=\" rgb(190, 226, 229)\" animationDelay=\"2000\">TODO</RoughNotation>\n            <RoughNotation type=\"circle\" show=\"true\" className=\"subtitle\" color=\" rgb(51, 173, 255)\" animationDelay=\"3000\">drag it !</RoughNotation>\n            </div>\n            {todoEvents.map((event,i) => (\n              <div className=\"todoitem\" title={event.title} data={event._id} color={event.color} key={i}>\n                <i class=\"fas fa-angle-right\"></i> {event.title}\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction renderEventContent(eventInfo) {\n  return (\n    <>\n      <b>{eventInfo.timeText} </b>\n      <i>{eventInfo.event.title}</i>\n    </>\n  )\n}\n// function renderSidebarEvent(event) {\n//   return (\n//     <li key={event.id}>\n//       <b>{formatDate(event.start, {year: 'numeric', month: 'short', day: 'numeric'})}</b>\n//       <i>{event.title}</i>\n//     </li>\n//   )\n// }"]},"metadata":{},"sourceType":"module"}