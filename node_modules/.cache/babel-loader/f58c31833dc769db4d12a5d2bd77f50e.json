{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Diary/Diary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport PicturesWall from \"./PicturesWall\";\nimport { DoubleLeftOutlined, DoubleRightOutlined, FrownOutlined, MehOutlined, SmileOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { Rate, DatePicker, message } from 'antd';\nimport \"./Diary.css\";\nimport axios from 'axios';\nconst API_ROOT = 'http://localhost:4000/api';\nconst instance = axios.create({\n  baseURL: API_ROOT\n});\nconst customIcons = {\n  1: /*#__PURE__*/_jsxDEV(FrownOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 8\n  }, this),\n  2: /*#__PURE__*/_jsxDEV(FrownOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 8\n  }, this),\n  3: /*#__PURE__*/_jsxDEV(MehOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 8\n  }, this),\n  4: /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 8\n  }, this),\n  5: /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 8\n  }, this)\n};\nexport default function Diary({\n  accountId\n}) {\n  _s();\n\n  const [dateStr, setDateStr] = useState();\n  const [photoText, setPhotoText] = useState(\"\");\n  const [mood, setMood] = useState(3);\n  const [text, setText] = useState(\"\");\n  const [isInDatabase, setIsInDatabase] = useState(false);\n\n  const goLeftPage = () => {\n    const newDate = moment(dateStr).subtract(1, \"days\").format(\"YYYY-MM-DD\");\n    setDateStr(newDate);\n  };\n\n  const goRightPage = () => {\n    const newDate = moment(dateStr).add(1, \"days\").format(\"YYYY-MM-DD\");\n    setDateStr(newDate);\n  };\n\n  const photoText_onChange = e => {\n    //console.log(\"photoText:\" + e.target.value);\n    setPhotoText(e.target.value);\n  };\n\n  const mood_onChange = v => {\n    setMood(v);\n  };\n\n  const text_onChange = e => {\n    //console.log(e.target.value);\n    setText(e.target.value);\n  };\n\n  const date_onChange = (val, str) => {\n    console.log(\"str:\" + str);\n\n    if (str !== \"\") {\n      setDateStr(str);\n    }\n  };\n\n  const _getContent = async () => {\n    const {\n      data: {\n        msg,\n        content\n      }\n    } = await instance.get('/getContent', {\n      params: {\n        accountId,\n        dateStr\n      }\n    });\n\n    if (msg === \"exist\") {\n      //console.log(\"getContent\");\n      //console.log(content);\n      setMood(content.mood);\n      setText(content.text);\n      setIsInDatabase(true);\n      setPhotoText(content.photoText);\n    } else {\n      setMood(3);\n      setText(\"\");\n      setIsInDatabase(false);\n      setPhotoText(\"\");\n    }\n  };\n\n  const _addContent = async () => {\n    const {\n      data: {\n        msg\n      }\n    } = await instance.post('/addContent', {\n      params: {\n        accountId,\n        dateStr,\n        mood,\n        text,\n        photoText\n      }\n    });\n\n    if (msg === \"success\") {\n      message.success('Save successfully');\n      setIsInDatabase(true);\n    } else {\n      message.error('Fail to save');\n    }\n  };\n\n  const _updateContent = async () => {\n    const {\n      data: {\n        msg\n      }\n    } = await instance.post('/updateContent', {\n      params: {\n        accountId,\n        dateStr,\n        mood,\n        text,\n        photoText\n      }\n    });\n\n    if (msg === \"success\") {\n      message.success('Save successfully');\n    } else {\n      message.error('Fail to save');\n    }\n  };\n\n  const onSave = () => {\n    if (isInDatabase) {\n      _updateContent();\n    } else {\n      _addContent();\n    }\n  };\n\n  useEffect(() => {\n    if (dateStr !== undefined) {\n      _getContent();\n    }\n  }, [dateStr]);\n  useEffect(() => {\n    //let str = new Date().toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\n    let str = moment().format(\"YYYY-MM-DD\");\n    setDateStr(str);\n  }, []);\n  const desc = ['terrible', 'bad', 'normal', 'good', 'wonderful'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boook\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttons\",\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttons\",\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/Calendar\",\n          children: \"Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttons now\",\n        disabled: true,\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/Diary\",\n          children: \"Diary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boookleft\",\n      children: [/*#__PURE__*/_jsxDEV(DoubleLeftOutlined, {\n        onClick: goLeftPage,\n        className: \"leftbutton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today font_s\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n            format: \"YYYY-MM-DD\",\n            onChange: date_onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"today_title\",\n            children: \"Date : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"today_date\",\n            children: dateStr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"today_mood\",\n            children: \"Mood : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Rate, {\n            className: \"mood_rate\",\n            tooltips: desc,\n            style: {\n              color: \"#DBB600\"\n            },\n            value: mood,\n            onChange: mood_onChange,\n            character: ({\n              index\n            }) => customIcons[index + 1],\n            className: \"mood\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RecordToday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Record your beautiful Love Memory...\" // rows=\"12\" cols=\"40\"\n        ,\n        onChange: text_onChange,\n        value: text,\n        className: \"RecordText font_F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSave,\n        className: \"save_button font_s\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boookright\",\n      children: [/*#__PURE__*/_jsxDEV(DoubleRightOutlined, {\n        onClick: goRightPage,\n        className: \"rightbutton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PicturesWall, {\n        dateStr: dateStr,\n        accountId: accountId,\n        photoText: photoText,\n        photoText_onChange: photoText_onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Diary, \"/1KDS79KpclmPeAlMbJdFvNLnjo=\");\n\n_c = Diary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"sources":["/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Diary/Diary.js"],"names":["React","useState","useEffect","NavLink","PicturesWall","DoubleLeftOutlined","DoubleRightOutlined","FrownOutlined","MehOutlined","SmileOutlined","moment","Rate","DatePicker","message","axios","API_ROOT","instance","create","baseURL","customIcons","Diary","accountId","dateStr","setDateStr","photoText","setPhotoText","mood","setMood","text","setText","isInDatabase","setIsInDatabase","goLeftPage","newDate","subtract","format","goRightPage","add","photoText_onChange","e","target","value","mood_onChange","v","text_onChange","date_onChange","val","str","console","log","_getContent","data","msg","content","get","params","_addContent","post","success","error","_updateContent","onSave","undefined","desc","color","index"],"mappings":"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","sourcesContent":["import React , {useState, useEffect}from 'react'\nimport { NavLink } from \"react-router-dom\";\nimport PicturesWall from \"./PicturesWall\";\nimport { DoubleLeftOutlined ,  DoubleRightOutlined , FrownOutlined, MehOutlined, SmileOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { Rate, DatePicker, message} from 'antd';\n\n\n\nimport \"./Diary.css\"\n\nimport axios from 'axios'\n\nconst API_ROOT = 'http://localhost:4000/api'\nconst instance = axios.create({\n  baseURL: API_ROOT\n})\n\n\nconst customIcons = {\n    1: <FrownOutlined />,\n    2: <FrownOutlined />,\n    3: <MehOutlined />,\n    4: <SmileOutlined />,\n    5: <SmileOutlined />,\n  };\n\nexport default function Diary({accountId}){\n    const [dateStr, setDateStr] = useState();\n    const [photoText, setPhotoText] = useState(\"\");\n    const [mood, setMood] = useState(3);\n    const [text, setText] = useState(\"\");\n    const [isInDatabase, setIsInDatabase] = useState(false);\n\n    const goLeftPage = () =>{\n        const newDate = moment(dateStr).subtract(1,\"days\").format(\"YYYY-MM-DD\");\n        setDateStr(newDate);\n    }\n\n    const goRightPage = () =>{\n        const newDate = moment(dateStr).add(1,\"days\").format(\"YYYY-MM-DD\");\n        setDateStr(newDate);\n    }\n\n    const photoText_onChange = (e) => {\n        //console.log(\"photoText:\" + e.target.value);\n        setPhotoText(e.target.value);\n    }\n\n    const mood_onChange = (v) =>{\n        setMood(v);\n    }\n    \n    const text_onChange = (e) => {\n        //console.log(e.target.value);\n        setText(e.target.value);\n    }\n\n    const date_onChange = (val, str) => {\n        console.log(\"str:\"+str);\n        if(str!==\"\"){\n            setDateStr(str);\n        }\n    }\n\n    const _getContent = async () => {\n        const {\n            data: { msg, content}\n        } = await instance.get('/getContent',{ params: { accountId, dateStr}});\n        if(msg===\"exist\"){\n            //console.log(\"getContent\");\n            //console.log(content);\n            setMood(content.mood);\n            setText(content.text);\n            setIsInDatabase(true);\n            setPhotoText(content.photoText);\n        }else{\n            setMood(3);\n            setText(\"\");\n            setIsInDatabase(false);\n            setPhotoText(\"\");\n        }\n    }\n\n    const _addContent = async () =>{\n        const {\n            data: { msg}\n        } = await instance.post('/addContent',{ params: { accountId, dateStr, mood, text, photoText}});\n        if(msg===\"success\"){\n            message.success('Save successfully');\n            setIsInDatabase(true);\n        }else{\n            message.error('Fail to save');\n        }\n    }\n\n    const _updateContent = async () => {\n        const {\n            data: { msg}\n        } = await instance.post('/updateContent',{ params: { accountId, dateStr, mood, text, photoText}});\n        if(msg===\"success\"){\n            message.success('Save successfully');\n        }else{\n            message.error('Fail to save');\n        }\n    }\n\n    const onSave = () =>{\n        if(isInDatabase){\n            _updateContent();\n        }else{\n            _addContent();\n        }\n    }\n\n    useEffect(()=>{\n        if(dateStr!==undefined){\n            _getContent();\n        }\n    },[dateStr]);\n\n    useEffect(()=>{\n        //let str = new Date().toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\n        let str = moment().format(\"YYYY-MM-DD\");\n        setDateStr(str);\n    },[]);\n\n    const desc = ['terrible', 'bad', 'normal', 'good', 'wonderful'];\n\n    return (\n        <div className='boook'>\n            <div className=\"list\">\n                <button className='buttons'type=\"button\" >\n                    <NavLink to=\"/\">Home</NavLink>\n                </button>\n                <p></p>\n                <button className='buttons' type=\"button\">\n                    <NavLink to=\"/Calendar\">Calendar</NavLink>\n                </button>\n                <p></p>\n                <button className='buttons now' disabled={true} type=\"button\">\n                    <NavLink to=\"/Diary\">Diary</NavLink>\n                </button>\n            </div>\n            <div className='boookleft'>\n                <DoubleLeftOutlined onClick={goLeftPage} className=\"leftbutton\"/>\n                <div className=\"today font_s\">\n                    <div>\n                        <DatePicker format=\"YYYY-MM-DD\"  onChange={date_onChange}></DatePicker>\n                        <div className=\"today_title\">Date : </div>\n                        <div className=\"today_date\">{dateStr}</div>\n                    </div>\n                    <div>\n                        <div className=\"today_mood\">Mood : </div>\n                        \n                        <Rate className=\"mood_rate\" tooltips={desc} style={{color:\"#DBB600\"}}value={mood} onChange={mood_onChange} character={({ index }) => customIcons[index + 1]} className=\"mood\"></Rate>\n                        \n                    </div>\n                </div>\n                <div  className=\"RecordToday\"></div>\n                <textarea placeholder=\"Record your beautiful Love Memory...\"\n                    // rows=\"12\" cols=\"40\"\n                    onChange = {text_onChange}\n                    value={text}\n                    className=\"RecordText font_F\"\n                ></textarea>\n                <button onClick={onSave} className=\"save_button font_s\">save</button>\n            </div>\n            <div className='boookright'>\n                <DoubleRightOutlined onClick={goRightPage} className=\"rightbutton\"/>\n                <PicturesWall dateStr={dateStr} accountId={accountId} photoText={photoText} photoText_onChange={photoText_onChange}></PicturesWall>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}