{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Diary/DiaryContent.js\",\n    _s = $RefreshSig$();\n\nimport { Rate, DatePicker } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { FrownOutlined, MehOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nconst API_ROOT = 'http://localhost:4000/api';\nconst instance = axios.create({\n  baseURL: API_ROOT\n});\nconst customIcons = {\n  1: /*#__PURE__*/_jsxDEV(FrownOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 8\n  }, this),\n  2: /*#__PURE__*/_jsxDEV(FrownOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 8\n  }, this),\n  3: /*#__PURE__*/_jsxDEV(MehOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 8\n  }, this),\n  4: /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 8\n  }, this),\n  5: /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 8\n  }, this)\n};\nexport default function DiaryContent({\n  dateStr,\n  accountId,\n  photoText,\n  photoText_init,\n  date_set\n}) {\n  _s();\n\n  const [mood, setMood] = useState(3);\n  const [text, setText] = useState(\"\");\n  const [isInDatabase, setIsInDatabase] = useState(false);\n\n  const mood_onChange = v => {\n    setMood(v);\n  };\n\n  const text_onChange = e => {\n    //console.log(e.target.value);\n    setText(e.target.value);\n  };\n\n  const date_onChange = (val, str) => {\n    console.log(str);\n    date_set(str);\n  };\n\n  const _getContent = async () => {\n    const {\n      data: {\n        message,\n        content\n      }\n    } = await instance.get('/getContent', {\n      params: {\n        accountId,\n        dateStr\n      }\n    });\n\n    if (message === \"exist\") {\n      //console.log(content);\n      setMood(content.mood);\n      setText(content.text);\n      setIsInDatabase(true);\n      photoText_init(content.photoText);\n    } else {\n      setMood(3);\n      setText(\"\");\n      setIsInDatabase(false);\n      var t = \"\";\n      photoText_init(t);\n    }\n  };\n\n  const _addContent = async () => {\n    const {\n      data: {\n        message\n      }\n    } = await instance.post('/addContent', {\n      params: {\n        accountId,\n        dateStr,\n        mood,\n        text,\n        photoText\n      }\n    });\n    if (message === \"success\") setIsInDatabase(true);\n  };\n\n  const _updateContent = async () => {\n    const {\n      data: {\n        message\n      }\n    } = await instance.post('/updateContent', {\n      params: {\n        accountId,\n        dateStr,\n        mood,\n        text,\n        photoText\n      }\n    });\n    if (message === \"error\") alert(\"update diary error\");\n  };\n\n  const onSave = () => {\n    if (isInDatabase) {\n      _updateContent();\n    } else {\n      _addContent();\n    }\n  };\n\n  useEffect(() => {\n    if (dateStr !== undefined) {\n      _getContent();\n    }\n  }, [dateStr]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today font_J\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"today_title\",\n          children: \"Today : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"today_date\",\n          children: dateStr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          format: \"YYYY-MM-DD\",\n          onChange: date_onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"today_mood\",\n          children: \"Mood : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Rate, {\n          value: mood,\n          onChange: mood_onChange,\n          character: ({\n            index\n          }) => customIcons[index + 1],\n          className: \"mood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Record your beautiful Love Memory...\",\n      rows: \"12\",\n      cols: \"40\",\n      onChange: text_onChange,\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSave,\n      children: \"save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n} //{dateStr.substr(0,4)}/{dateStr.substr(5,2)}/{dateStr.substr(8,2)}\n\n_s(DiaryContent, \"AllJ3ztNxe5nH/sCnCuiCWV9W50=\");\n\n_c = DiaryContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiaryContent\");","map":{"version":3,"sources":["/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Diary/DiaryContent.js"],"names":["Rate","DatePicker","React","useEffect","useState","FrownOutlined","MehOutlined","SmileOutlined","axios","API_ROOT","instance","create","baseURL","customIcons","DiaryContent","dateStr","accountId","photoText","photoText_init","date_set","mood","setMood","text","setText","isInDatabase","setIsInDatabase","mood_onChange","v","text_onChange","e","target","value","date_onChange","val","str","console","log","_getContent","data","message","content","get","params","t","_addContent","post","_updateContent","alert","onSave","undefined","index"],"mappings":"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","sourcesContent":["import { Rate, DatePicker} from 'antd';\nimport React , { useEffect, useState} from  'react' ; \nimport { FrownOutlined, MehOutlined, SmileOutlined } from '@ant-design/icons';\n\nimport axios from 'axios'\n\nconst API_ROOT = 'http://localhost:4000/api'\nconst instance = axios.create({\n  baseURL: API_ROOT\n})\n\n\nconst customIcons = {\n    1: <FrownOutlined />,\n    2: <FrownOutlined />,\n    3: <MehOutlined />,\n    4: <SmileOutlined />,\n    5: <SmileOutlined />,\n  };\n\n\nexport default function DiaryContent({dateStr, accountId, photoText, photoText_init, date_set}){\n    const [mood, setMood] = useState(3);\n    const [text, setText] = useState(\"\");\n    const [isInDatabase, setIsInDatabase] = useState(false);\n\n    const mood_onChange = (v) =>{\n        setMood(v);\n    }\n    \n    const text_onChange = (e) => {\n        //console.log(e.target.value);\n        setText(e.target.value);\n    }\n\n    const date_onChange = (val, str) => {\n        console.log(str);\n        date_set(str);\n    }\n\n    const _getContent = async () => {\n        const {\n            data: { message, content}\n        } = await instance.get('/getContent',{ params: { accountId, dateStr}});\n        if(message===\"exist\"){\n            //console.log(content);\n            setMood(content.mood);\n            setText(content.text);\n            setIsInDatabase(true);\n            photoText_init(content.photoText);\n        }else{\n            setMood(3);\n            setText(\"\");\n            setIsInDatabase(false);\n            var t=\"\";\n            photoText_init(t);\n        }\n    }\n\n    const _addContent = async () =>{\n        const {\n            data: { message}\n        } = await instance.post('/addContent',{ params: { accountId, dateStr, mood, text, photoText}});\n        if(message===\"success\")setIsInDatabase(true);\n    }\n\n    const _updateContent = async () => {\n        const {\n            data: { message}\n        } = await instance.post('/updateContent',{ params: { accountId, dateStr, mood, text, photoText}});\n        if(message === \"error\") alert(\"update diary error\")\n    }\n\n    const onSave = () =>{\n        if(isInDatabase){\n            _updateContent();\n        }else{\n            _addContent();\n        }\n    }\n\n    useEffect(()=>{\n        if(dateStr!==undefined){\n            _getContent();\n        }\n    },[dateStr]);\n\n    return(\n        <div>\n        <div className=\"today font_J\">\n            <div>\n                <div className=\"today_title\">Today : </div>\n                <div className=\"today_date\">{dateStr}</div>\n                <DatePicker format=\"YYYY-MM-DD\"  onChange={date_onChange}></DatePicker>\n            </div>\n            <div>\n                <div className=\"today_mood\">Mood : </div>\n                <Rate value={mood} onChange={mood_onChange} character={({ index }) => customIcons[index + 1]} className=\"mood\"></Rate>\n            </div>\n            </div>\n\n        <textarea placeholder=\"Record your beautiful Love Memory...\"\n            rows=\"12\" cols=\"40\"\n            onChange = {text_onChange}\n            value={text}\n        ></textarea>\n        <button onClick={onSave}>save</button>\n\n        </div>\n    )\n}\n//{dateStr.substr(0,4)}/{dateStr.substr(5,2)}/{dateStr.substr(8,2)}"]},"metadata":{},"sourceType":"module"}