{"ast":null,"code":"/*!\nFullCalendar v5.3.2\nDocs & License: https://fullcalendar.io/\n(c) 2020 Adam Shaw\n*/\nimport './main.css';\nimport { createRef, getStickyHeaderDates, createElement, ViewRoot, SimpleScrollGrid, getStickyFooterScrollbar, DateComponent, renderScrollShim, buildNavLinkData, DayCellContent, Fragment, BaseComponent, createFormatter, setRef, DayCellRoot, WeekNumberRoot, RenderHook, buildSegTimeText, EventRoot, StandardEvent, sortEventSegs, addDays, intersectRanges, RefMap, isPropsEqual, getSegMeta, buildEventRangeKey, BgEvent, renderFill, PositionCache, mapHash, DelayedRunner, applyStyle, memoize, NowTimer, EventApi, Slicer, DayHeader, DaySeriesModel, DayTableModel, addWeeks, diffWeeks, DateProfileGenerator, identity, createPlugin } from '@fullcalendar/common';\nimport { __extends, __assign, __spreadArrays } from 'tslib';\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\n\nvar TableView =\n/** @class */\nfunction (_super) {\n  __extends(TableView, _super);\n\n  function TableView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.headerElRef = createRef();\n    return _this;\n  }\n\n  TableView.prototype.renderSimpleLayout = function (headerRowContent, bodyContent) {\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var sections = [];\n    var stickyHeaderDates = getStickyHeaderDates(context.options);\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }\n      });\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunk: {\n        content: bodyContent\n      }\n    });\n    return createElement(ViewRoot, {\n      viewSpec: context.viewSpec\n    }, function (rootElRef, classNames) {\n      return createElement(\"div\", {\n        ref: rootElRef,\n        className: ['fc-daygrid'].concat(classNames).join(' ')\n      }, createElement(SimpleScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        cols: []\n        /* TODO: make optional? */\n        ,\n        sections: sections\n      }));\n    });\n  };\n\n  TableView.prototype.renderHScrollLayout = function (headerRowContent, bodyContent, colCnt, dayMinWidth) {\n    var ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation');\n    }\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n    var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n    var sections = [];\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'main',\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }]\n      });\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunks: [{\n        key: 'main',\n        content: bodyContent\n      }]\n    });\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'main',\n          content: renderScrollShim\n        }]\n      });\n    }\n\n    return createElement(ViewRoot, {\n      viewSpec: context.viewSpec\n    }, function (rootElRef, classNames) {\n      return createElement(\"div\", {\n        ref: rootElRef,\n        className: ['fc-daygrid'].concat(classNames).join(' ')\n      }, createElement(ScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        colGroups: [{\n          cols: [{\n            span: colCnt,\n            minWidth: dayMinWidth\n          }]\n        }],\n        sections: sections\n      }));\n    });\n  };\n\n  return TableView;\n}(DateComponent);\n\nfunction splitSegsByRow(segs, rowCnt) {\n  var byRow = [];\n\n  for (var i = 0; i < rowCnt; i += 1) {\n    byRow[i] = [];\n  }\n\n  for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n    var seg = segs_1[_i];\n    byRow[seg.row].push(seg);\n  }\n\n  return byRow;\n}\n\nfunction splitSegsByFirstCol(segs, colCnt) {\n  var byCol = [];\n\n  for (var i = 0; i < colCnt; i += 1) {\n    byCol[i] = [];\n  }\n\n  for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n    var seg = segs_2[_i];\n    byCol[seg.firstCol].push(seg);\n  }\n\n  return byCol;\n}\n\nfunction splitInteractionByRow(ui, rowCnt) {\n  var byRow = [];\n\n  if (!ui) {\n    for (var i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null;\n    }\n  } else {\n    for (var i = 0; i < rowCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: []\n      };\n    }\n\n    for (var _i = 0, _a = ui.segs; _i < _a.length; _i++) {\n      var seg = _a[_i];\n      byRow[seg.row].segs.push(seg);\n    }\n  }\n\n  return byRow;\n}\n\nvar TableCellTop =\n/** @class */\nfunction (_super) {\n  __extends(TableCellTop, _super);\n\n  function TableCellTop() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TableCellTop.prototype.render = function () {\n    var props = this.props;\n    var navLinkAttrs = this.context.options.navLinks ? {\n      'data-navlink': buildNavLinkData(props.date),\n      tabIndex: 0\n    } : {};\n    return createElement(DayCellContent, {\n      date: props.date,\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      showDayNumber: props.showDayNumber,\n      extraHookProps: props.extraHookProps,\n      defaultContent: renderTopInner\n    }, function (innerElRef, innerContent) {\n      return (innerContent || props.forceDayTop) && createElement(\"div\", {\n        className: \"fc-daygrid-day-top\",\n        ref: innerElRef\n      }, createElement(\"a\", __assign({\n        className: \"fc-daygrid-day-number\"\n      }, navLinkAttrs), innerContent || createElement(Fragment, null, \"\\u00A0\")));\n    });\n  };\n\n  return TableCellTop;\n}(BaseComponent);\n\nfunction renderTopInner(props) {\n  return props.dayNumberText;\n}\n\nvar DEFAULT_WEEK_NUM_FORMAT = createFormatter({\n  week: 'narrow'\n});\n\nvar TableCell =\n/** @class */\nfunction (_super) {\n  __extends(TableCell, _super);\n\n  function TableCell() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handleRootEl = function (el) {\n      _this.rootEl = el;\n      setRef(_this.props.elRef, el);\n    };\n\n    _this.handleMoreLinkClick = function (ev) {\n      var props = _this.props;\n\n      if (props.onMoreClick) {\n        var allSegs = props.segsByEachCol;\n        var hiddenSegs = allSegs.filter(function (seg) {\n          return props.segIsHidden[seg.eventRange.instance.instanceId];\n        });\n        props.onMoreClick({\n          date: props.date,\n          allSegs: allSegs,\n          hiddenSegs: hiddenSegs,\n          moreCnt: props.moreCnt,\n          dayEl: _this.rootEl,\n          ev: ev\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  TableCell.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.context,\n        options = _a.options,\n        viewApi = _a.viewApi;\n    var props = this.props;\n    var date = props.date,\n        dateProfile = props.dateProfile;\n    var hookProps = {\n      num: props.moreCnt,\n      text: props.buildMoreLinkText(props.moreCnt),\n      view: viewApi\n    };\n    var navLinkAttrs = options.navLinks ? {\n      'data-navlink': buildNavLinkData(date, 'week'),\n      tabIndex: 0\n    } : {};\n    return createElement(DayCellRoot, {\n      date: date,\n      dateProfile: dateProfile,\n      todayRange: props.todayRange,\n      showDayNumber: props.showDayNumber,\n      extraHookProps: props.extraHookProps,\n      elRef: this.handleRootEl\n    }, function (dayElRef, dayClassNames, rootDataAttrs, isDisabled) {\n      return createElement(\"td\", __assign({\n        ref: dayElRef,\n        className: ['fc-daygrid-day'].concat(dayClassNames, props.extraClassNames || []).join(' ')\n      }, rootDataAttrs, props.extraDataAttrs), createElement(\"div\", {\n        className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\",\n        ref: props.innerElRef\n        /* different from hook system! RENAME */\n\n      }, props.showWeekNumber && createElement(WeekNumberRoot, {\n        date: date,\n        defaultFormat: DEFAULT_WEEK_NUM_FORMAT\n      }, function (weekElRef, weekClassNames, innerElRef, innerContent) {\n        return createElement(\"a\", __assign({\n          ref: weekElRef,\n          className: ['fc-daygrid-week-number'].concat(weekClassNames).join(' ')\n        }, navLinkAttrs), innerContent);\n      }), !isDisabled && createElement(TableCellTop, {\n        date: date,\n        dateProfile: dateProfile,\n        showDayNumber: props.showDayNumber,\n        forceDayTop: props.forceDayTop,\n        todayRange: props.todayRange,\n        extraHookProps: props.extraHookProps\n      }), createElement(\"div\", {\n        className: \"fc-daygrid-day-events\",\n        ref: props.fgContentElRef,\n        style: {\n          paddingBottom: props.fgPaddingBottom\n        }\n      }, props.fgContent, Boolean(props.moreCnt) && createElement(\"div\", {\n        className: \"fc-daygrid-day-bottom\",\n        style: {\n          marginTop: props.moreMarginTop\n        }\n      }, createElement(RenderHook, {\n        hookProps: hookProps,\n        classNames: options.moreLinkClassNames,\n        content: options.moreLinkContent,\n        defaultContent: renderMoreLinkInner,\n        didMount: options.moreLinkDidMount,\n        willUnmount: options.moreLinkWillUnmount\n      }, function (rootElRef, classNames, innerElRef, innerContent) {\n        return createElement(\"a\", {\n          ref: rootElRef,\n          className: ['fc-daygrid-more-link'].concat(classNames).join(' '),\n          onClick: _this.handleMoreLinkClick\n        }, innerContent);\n      }))), createElement(\"div\", {\n        className: \"fc-daygrid-day-bg\"\n      }, props.bgContent)));\n    });\n  };\n\n  return TableCell;\n}(DateComponent);\n\nfunction renderMoreLinkInner(props) {\n  return props.text;\n}\n\nvar DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow'\n});\n\nfunction hasListItemDisplay(seg) {\n  var display = seg.eventRange.ui.display;\n  return display === 'list-item' || display === 'auto' && !seg.eventRange.def.allDay && seg.firstCol === seg.lastCol && // can't be multi-day\n  seg.isStart && // \"\n  seg.isEnd // \"\n  ;\n}\n\nvar TableListItemEvent =\n/** @class */\nfunction (_super) {\n  __extends(TableListItemEvent, _super);\n\n  function TableListItemEvent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TableListItemEvent.prototype.render = function () {\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var timeFormat = context.options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n    var timeText = buildSegTimeText(props.seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n    return createElement(EventRoot, {\n      seg: props.seg,\n      timeText: timeText,\n      defaultContent: renderInnerContent,\n      isDragging: props.isDragging,\n      isResizing: false,\n      isDateSelecting: false,\n      isSelected: props.isSelected,\n      isPast: props.isPast,\n      isFuture: props.isFuture,\n      isToday: props.isToday\n    }, function (rootElRef, classNames, innerElRef, innerContent) {\n      return (// we don't use styles!\n        createElement(\"a\", __assign({\n          className: ['fc-daygrid-event', 'fc-daygrid-dot-event'].concat(classNames).join(' '),\n          ref: rootElRef\n        }, getSegAnchorAttrs(props.seg)), innerContent)\n      );\n    });\n  };\n\n  return TableListItemEvent;\n}(BaseComponent);\n\nfunction renderInnerContent(innerProps) {\n  return createElement(Fragment, null, createElement(\"div\", {\n    className: \"fc-daygrid-event-dot\",\n    style: {\n      borderColor: innerProps.borderColor || innerProps.backgroundColor\n    }\n  }), innerProps.timeText && createElement(\"div\", {\n    className: \"fc-event-time\"\n  }, innerProps.timeText), createElement(\"div\", {\n    className: \"fc-event-title\"\n  }, innerProps.event.title || createElement(Fragment, null, \"\\u00A0\")));\n}\n\nfunction getSegAnchorAttrs(seg) {\n  var url = seg.eventRange.def.url;\n  return url ? {\n    href: url\n  } : {};\n}\n\nvar TableBlockEvent =\n/** @class */\nfunction (_super) {\n  __extends(TableBlockEvent, _super);\n\n  function TableBlockEvent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TableBlockEvent.prototype.render = function () {\n    var props = this.props;\n    return createElement(StandardEvent, __assign({}, props, {\n      extraClassNames: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'],\n      defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT,\n      defaultDisplayEventEnd: props.defaultDisplayEventEnd,\n      disableResizing: !props.seg.eventRange.def.allDay\n    }));\n  };\n\n  return TableBlockEvent;\n}(BaseComponent);\n\nfunction computeFgSegPlacement( // for one row. TODO: print mode?\ncellModels, segs, dayMaxEvents, dayMaxEventRows, eventHeights, maxContentHeight, colCnt, eventOrderSpecs) {\n  var colPlacements = []; // if event spans multiple cols, its present in each col\n\n  var moreCnts = []; // by-col\n\n  var segIsHidden = {};\n  var segTops = {}; // always populated for each seg\n\n  var segMarginTops = {}; // simetimes populated for each seg\n\n  var moreTops = {};\n  var paddingBottoms = {}; // for each cell's inner-wrapper div\n\n  for (var i = 0; i < colCnt; i += 1) {\n    colPlacements.push([]);\n    moreCnts.push(0);\n  }\n\n  segs = sortEventSegs(segs, eventOrderSpecs);\n\n  for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n    var seg = segs_1[_i];\n    var instanceId = seg.eventRange.instance.instanceId;\n    var eventHeight = eventHeights[instanceId + ':' + seg.firstCol];\n    placeSeg(seg, eventHeight || 0); // will keep colPlacements sorted by top\n  }\n\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    limitByMaxHeight(moreCnts, segIsHidden, colPlacements, maxContentHeight); // populates moreCnts/segIsHidden\n  } else if (typeof dayMaxEvents === 'number') {\n    limitByMaxEvents(moreCnts, segIsHidden, colPlacements, dayMaxEvents); // populates moreCnts/segIsHidden\n  } else if (typeof dayMaxEventRows === 'number') {\n    limitByMaxRows(moreCnts, segIsHidden, colPlacements, dayMaxEventRows); // populates moreCnts/segIsHidden\n  } // computes segTops/segMarginTops/moreTops/paddingBottoms\n\n\n  for (var col = 0; col < colCnt; col += 1) {\n    var placements = colPlacements[col];\n    var currentNonAbsBottom = 0;\n    var currentAbsHeight = 0;\n\n    for (var _a = 0, placements_1 = placements; _a < placements_1.length; _a++) {\n      var placement = placements_1[_a];\n      var seg = placement.seg;\n\n      if (!segIsHidden[seg.eventRange.instance.instanceId]) {\n        segTops[seg.eventRange.instance.instanceId] = placement.top; // from top of container\n\n        if (seg.firstCol === seg.lastCol && seg.isStart && seg.isEnd) {\n          // TODO: simpler way? NOT DRY\n          segMarginTops[seg.eventRange.instance.instanceId] = placement.top - currentNonAbsBottom; // from previous seg bottom\n\n          currentAbsHeight = 0;\n          currentNonAbsBottom = placement.bottom;\n        } else {\n          // multi-col event, abs positioned\n          currentAbsHeight = placement.bottom - currentNonAbsBottom;\n        }\n      }\n    }\n\n    if (currentAbsHeight) {\n      if (moreCnts[col]) {\n        moreTops[col] = currentAbsHeight;\n      } else {\n        paddingBottoms[col] = currentAbsHeight;\n      }\n    }\n  }\n\n  function placeSeg(seg, segHeight) {\n    if (!tryPlaceSegAt(seg, segHeight, 0)) {\n      for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {\n        for (var _i = 0, _a = colPlacements[col]; _i < _a.length; _i++) {\n          // will repeat multi-day segs!!!!!!! bad!!!!!!\n          var placement = _a[_i];\n\n          if (tryPlaceSegAt(seg, segHeight, placement.bottom)) {\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  function tryPlaceSegAt(seg, segHeight, top) {\n    if (canPlaceSegAt(seg, segHeight, top)) {\n      for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {\n        var placements = colPlacements[col];\n        var insertionIndex = 0;\n\n        while (insertionIndex < placements.length && top >= placements[insertionIndex].top) {\n          insertionIndex += 1;\n        }\n\n        placements.splice(insertionIndex, 0, {\n          seg: seg,\n          top: top,\n          bottom: top + segHeight\n        });\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function canPlaceSegAt(seg, segHeight, top) {\n    for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {\n      for (var _i = 0, _a = colPlacements[col]; _i < _a.length; _i++) {\n        var placement = _a[_i];\n\n        if (top < placement.bottom && top + segHeight > placement.top) {\n          // collide?\n          return false;\n        }\n      }\n    }\n\n    return true;\n  } // what does this do!?\n\n\n  for (var instanceIdAndFirstCol in eventHeights) {\n    if (!eventHeights[instanceIdAndFirstCol]) {\n      segIsHidden[instanceIdAndFirstCol.split(':')[0]] = true;\n    }\n  }\n\n  var segsByFirstCol = colPlacements.map(extractFirstColSegs); // operates on the sorted cols\n\n  var segsByEachCol = colPlacements.map(function (placements, col) {\n    var segsForCols = extractAllColSegs(placements);\n    segsForCols = resliceDaySegs(segsForCols, cellModels[col].date, col);\n    return segsForCols;\n  });\n  return {\n    segsByFirstCol: segsByFirstCol,\n    segsByEachCol: segsByEachCol,\n    segIsHidden: segIsHidden,\n    segTops: segTops,\n    segMarginTops: segMarginTops,\n    moreCnts: moreCnts,\n    moreTops: moreTops,\n    paddingBottoms: paddingBottoms\n  };\n}\n\nfunction extractFirstColSegs(oneColPlacements, col) {\n  var segs = [];\n\n  for (var _i = 0, oneColPlacements_1 = oneColPlacements; _i < oneColPlacements_1.length; _i++) {\n    var placement = oneColPlacements_1[_i];\n\n    if (placement.seg.firstCol === col) {\n      segs.push(placement.seg);\n    }\n  }\n\n  return segs;\n}\n\nfunction extractAllColSegs(oneColPlacements) {\n  var segs = [];\n\n  for (var _i = 0, oneColPlacements_2 = oneColPlacements; _i < oneColPlacements_2.length; _i++) {\n    var placement = oneColPlacements_2[_i];\n    segs.push(placement.seg);\n  }\n\n  return segs;\n}\n\nfunction limitByMaxHeight(hiddenCnts, segIsHidden, colPlacements, maxContentHeight) {\n  limitEvents(hiddenCnts, segIsHidden, colPlacements, true, function (placement) {\n    return placement.bottom <= maxContentHeight;\n  });\n}\n\nfunction limitByMaxEvents(hiddenCnts, segIsHidden, colPlacements, dayMaxEvents) {\n  limitEvents(hiddenCnts, segIsHidden, colPlacements, false, function (placement, levelIndex) {\n    return levelIndex < dayMaxEvents;\n  });\n}\n\nfunction limitByMaxRows(hiddenCnts, segIsHidden, colPlacements, dayMaxEventRows) {\n  limitEvents(hiddenCnts, segIsHidden, colPlacements, true, function (placement, levelIndex) {\n    return levelIndex < dayMaxEventRows;\n  });\n}\n/*\npopulates the given hiddenCnts/segIsHidden, which are supplied empty.\nTODO: return them instead\n*/\n\n\nfunction limitEvents(hiddenCnts, segIsHidden, colPlacements, _moreLinkConsumesLevel, isPlacementInBounds) {\n  var colCnt = hiddenCnts.length;\n  var segIsVisible = {}; // TODO: instead, use segIsHidden with true/false?\n\n  var visibleColPlacements = []; // will mirror colPlacements\n\n  for (var col = 0; col < colCnt; col += 1) {\n    visibleColPlacements.push([]);\n  }\n\n  for (var col = 0; col < colCnt; col += 1) {\n    var placements = colPlacements[col];\n    var level = 0;\n\n    for (var _i = 0, placements_2 = placements; _i < placements_2.length; _i++) {\n      var placement = placements_2[_i];\n\n      if (isPlacementInBounds(placement, level)) {\n        recordVisible(placement);\n      } else {\n        recordHidden(placement, level, _moreLinkConsumesLevel);\n      } // only considered a level if the seg had height\n\n\n      if (placement.top !== placement.bottom) {\n        level += 1;\n      }\n    }\n  }\n\n  function recordVisible(placement) {\n    var seg = placement.seg;\n    var instanceId = seg.eventRange.instance.instanceId;\n\n    if (!segIsVisible[instanceId]) {\n      segIsVisible[instanceId] = true;\n\n      for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {\n        visibleColPlacements[col].push(placement);\n      }\n    }\n  }\n\n  function recordHidden(placement, currentLevel, moreLinkConsumesLevel) {\n    var seg = placement.seg;\n    var instanceId = seg.eventRange.instance.instanceId;\n\n    if (!segIsHidden[instanceId]) {\n      segIsHidden[instanceId] = true;\n\n      for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {\n        hiddenCnts[col] += 1;\n        var hiddenCnt = hiddenCnts[col];\n\n        if (moreLinkConsumesLevel && hiddenCnt === 1 && currentLevel > 0) {\n          var doomedLevel = currentLevel - 1;\n\n          while (visibleColPlacements[col].length > doomedLevel) {\n            recordHidden(visibleColPlacements[col].pop(), // removes\n            visibleColPlacements[col].length, // will execute after the pop. will be the index of the removed placement\n            false);\n          }\n        }\n      }\n    }\n  }\n} // Given the events within an array of segment objects, reslice them to be in a single day\n\n\nfunction resliceDaySegs(segs, dayDate, colIndex) {\n  var dayStart = dayDate;\n  var dayEnd = addDays(dayStart, 1);\n  var dayRange = {\n    start: dayStart,\n    end: dayEnd\n  };\n  var newSegs = [];\n\n  for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n    var seg = segs_2[_i];\n    var eventRange = seg.eventRange;\n    var origRange = eventRange.range;\n    var slicedRange = intersectRanges(origRange, dayRange);\n\n    if (slicedRange) {\n      newSegs.push(__assign(__assign({}, seg), {\n        firstCol: colIndex,\n        lastCol: colIndex,\n        eventRange: {\n          def: eventRange.def,\n          ui: __assign(__assign({}, eventRange.ui), {\n            durationEditable: false\n          }),\n          instance: eventRange.instance,\n          range: slicedRange\n        },\n        isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n        isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf()\n      }));\n    }\n  }\n\n  return newSegs;\n}\n\nvar TableRow =\n/** @class */\nfunction (_super) {\n  __extends(TableRow, _super);\n\n  function TableRow() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.cellElRefs = new RefMap(); // the <td>\n\n    _this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n\n    _this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n\n    _this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n\n    _this.rootElRef = createRef();\n    _this.state = {\n      framePositions: null,\n      maxContentHeight: null,\n      segHeights: {}\n    };\n    return _this;\n  }\n\n  TableRow.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        state = _a.state,\n        context = _a.context;\n\n    var colCnt = props.cells.length;\n    var businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n    var bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n    var highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n    var mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n\n    var _b = computeFgSegPlacement(props.cells, props.fgEventSegs, props.dayMaxEvents, props.dayMaxEventRows, state.segHeights, state.maxContentHeight, colCnt, context.options.eventOrder),\n        paddingBottoms = _b.paddingBottoms,\n        segsByFirstCol = _b.segsByFirstCol,\n        segsByEachCol = _b.segsByEachCol,\n        segIsHidden = _b.segIsHidden,\n        segTops = _b.segTops,\n        segMarginTops = _b.segMarginTops,\n        moreCnts = _b.moreCnts,\n        moreTops = _b.moreTops;\n\n    var selectedInstanceHash = // TODO: messy way to compute this\n    props.eventDrag && props.eventDrag.affectedInstances || props.eventResize && props.eventResize.affectedInstances || {};\n    return createElement(\"tr\", {\n      ref: this.rootElRef\n    }, props.renderIntro && props.renderIntro(), props.cells.map(function (cell, col) {\n      var normalFgNodes = _this.renderFgSegs(segsByFirstCol[col], segIsHidden, segTops, segMarginTops, selectedInstanceHash, props.todayRange);\n\n      var mirrorFgNodes = _this.renderFgSegs(mirrorSegsByCol[col], {}, segTops, // use same tops as real rendering\n      {}, {}, props.todayRange, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n\n      return createElement(TableCell, {\n        key: cell.key,\n        elRef: _this.cellElRefs.createRef(cell.key),\n        innerElRef: _this.frameElRefs.createRef(cell.key)\n        /* FF <td> problem, but okay to use for left/right. TODO: rename prop */\n        ,\n        dateProfile: props.dateProfile,\n        date: cell.date,\n        showDayNumber: props.showDayNumbers,\n        showWeekNumber: props.showWeekNumbers && col === 0,\n        forceDayTop: props.showWeekNumbers\n        /* even displaying weeknum for row, not necessarily day */\n        ,\n        todayRange: props.todayRange,\n        extraHookProps: cell.extraHookProps,\n        extraDataAttrs: cell.extraDataAttrs,\n        extraClassNames: cell.extraClassNames,\n        moreCnt: moreCnts[col],\n        buildMoreLinkText: props.buildMoreLinkText,\n        onMoreClick: props.onMoreClick,\n        segIsHidden: segIsHidden,\n        moreMarginTop: moreTops[col]\n        /* rename */\n        ,\n        segsByEachCol: segsByEachCol[col],\n        fgPaddingBottom: paddingBottoms[col],\n        fgContentElRef: _this.fgElRefs.createRef(cell.key),\n        fgContent: // Fragment scopes the keys\n        createElement(Fragment, null, createElement(Fragment, null, normalFgNodes), createElement(Fragment, null, mirrorFgNodes)),\n        bgContent: // Fragment scopes the keys\n        createElement(Fragment, null, _this.renderFillSegs(highlightSegsByCol[col], 'highlight'), _this.renderFillSegs(businessHoursByCol[col], 'non-business'), _this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))\n      });\n    }));\n  };\n\n  TableRow.prototype.componentDidMount = function () {\n    this.updateSizing(true);\n  };\n\n  TableRow.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var currentProps = this.props;\n    this.updateSizing(!isPropsEqual(prevProps, currentProps));\n  };\n\n  TableRow.prototype.getHighlightSegs = function () {\n    var props = this.props;\n\n    if (props.eventDrag && props.eventDrag.segs.length) {\n      // messy check\n      return props.eventDrag.segs;\n    }\n\n    if (props.eventResize && props.eventResize.segs.length) {\n      // messy check\n      return props.eventResize.segs;\n    }\n\n    return props.dateSelectionSegs;\n  };\n\n  TableRow.prototype.getMirrorSegs = function () {\n    var props = this.props;\n\n    if (props.eventResize && props.eventResize.segs.length) {\n      // messy check\n      return props.eventResize.segs;\n    }\n\n    return [];\n  };\n\n  TableRow.prototype.renderFgSegs = function (segs, segIsHidden, // does NOT mean display:hidden\n  segTops, segMarginTops, selectedInstanceHash, todayRange, isDragging, isResizing, isDateSelecting) {\n    var context = this.context;\n    var eventSelection = this.props.eventSelection;\n    var framePositions = this.state.framePositions;\n    var defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n\n    var nodes = [];\n\n    if (framePositions) {\n      for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n        var seg = segs_1[_i];\n        var instanceId = seg.eventRange.instance.instanceId;\n        var isMirror = isDragging || isResizing || isDateSelecting;\n        var isSelected = selectedInstanceHash[instanceId];\n        var isInvisible = segIsHidden[instanceId] || isSelected; // TODO: simpler way? NOT DRY\n\n        var isAbsolute = segIsHidden[instanceId] || isMirror || seg.firstCol !== seg.lastCol || !seg.isStart || !seg.isEnd;\n        var marginTop = void 0;\n        var top_1 = void 0;\n        var left = void 0;\n        var right = void 0;\n\n        if (isAbsolute) {\n          top_1 = segTops[instanceId];\n\n          if (context.isRtl) {\n            right = 0;\n            left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n          } else {\n            left = 0;\n            right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n          }\n        } else {\n          marginTop = segMarginTops[instanceId];\n        }\n        /*\n        known bug: events that are force to be list-item but span multiple days still take up space in later columns\n        */\n\n\n        nodes.push(createElement(\"div\", {\n          className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''),\n          key: instanceId,\n          // in print mode when in mult cols, could collide\n          ref: isMirror ? null : this.segHarnessRefs.createRef(instanceId + ':' + seg.firstCol),\n          style: {\n            visibility: isInvisible ? 'hidden' : '',\n            marginTop: marginTop || '',\n            top: top_1 || '',\n            left: left || '',\n            right: right || ''\n          }\n        }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, __assign({\n          seg: seg,\n          isDragging: isDragging,\n          isSelected: instanceId === eventSelection,\n          defaultDisplayEventEnd: defaultDisplayEventEnd\n        }, getSegMeta(seg, todayRange))) : createElement(TableBlockEvent, __assign({\n          seg: seg,\n          isDragging: isDragging,\n          isResizing: isResizing,\n          isDateSelecting: isDateSelecting,\n          isSelected: instanceId === eventSelection,\n          defaultDisplayEventEnd: defaultDisplayEventEnd\n        }, getSegMeta(seg, todayRange)))));\n      }\n    }\n\n    return nodes;\n  };\n\n  TableRow.prototype.renderFillSegs = function (segs, fillType) {\n    var isRtl = this.context.isRtl;\n    var todayRange = this.props.todayRange;\n    var framePositions = this.state.framePositions;\n    var nodes = [];\n\n    if (framePositions) {\n      for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n        var seg = segs_2[_i];\n        var leftRightCss = isRtl ? {\n          right: 0,\n          left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n        } : {\n          left: 0,\n          right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n        };\n        nodes.push(createElement(\"div\", {\n          key: buildEventRangeKey(seg.eventRange),\n          className: \"fc-daygrid-bg-harness\",\n          style: leftRightCss\n        }, fillType === 'bg-event' ? createElement(BgEvent, __assign({\n          seg: seg\n        }, getSegMeta(seg, todayRange))) : renderFill(fillType)));\n      }\n    }\n\n    return createElement.apply(void 0, __spreadArrays([Fragment, {}], nodes));\n  };\n\n  TableRow.prototype.updateSizing = function (isExternalSizingChange) {\n    var _a = this,\n        props = _a.props,\n        frameElRefs = _a.frameElRefs;\n\n    if (props.clientWidth !== null) {\n      // positioning ready?\n      if (isExternalSizingChange) {\n        var frameEls = props.cells.map(function (cell) {\n          return frameElRefs.currentMap[cell.key];\n        });\n\n        if (frameEls.length) {\n          var originEl = this.rootElRef.current;\n          this.setState({\n            framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n            false)\n          });\n        }\n      }\n\n      var limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n      this.setState({\n        segHeights: this.computeSegHeights(),\n        maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null\n      });\n    }\n  };\n\n  TableRow.prototype.computeSegHeights = function () {\n    return mapHash(this.segHarnessRefs.currentMap, function (eventHarnessEl) {\n      return eventHarnessEl.getBoundingClientRect().height;\n    });\n  };\n\n  TableRow.prototype.computeMaxContentHeight = function () {\n    var firstKey = this.props.cells[0].key;\n    var cellEl = this.cellElRefs.currentMap[firstKey];\n    var fcContainerEl = this.fgElRefs.currentMap[firstKey];\n    return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n  };\n\n  TableRow.prototype.getCellEls = function () {\n    var elMap = this.cellElRefs.currentMap;\n    return this.props.cells.map(function (cell) {\n      return elMap[cell.key];\n    });\n  };\n\n  return TableRow;\n}(DateComponent);\n\nTableRow.addStateEquality({\n  segHeights: isPropsEqual\n});\nvar PADDING_FROM_VIEWPORT = 10;\nvar SCROLL_DEBOUNCE = 10;\n\nvar Popover =\n/** @class */\nfunction (_super) {\n  __extends(Popover, _super);\n\n  function Popover() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.repositioner = new DelayedRunner(_this.updateSize.bind(_this));\n\n    _this.handleRootEl = function (el) {\n      _this.rootEl = el;\n\n      if (_this.props.elRef) {\n        setRef(_this.props.elRef, el);\n      }\n    }; // Triggered when the user clicks *anywhere* in the document, for the autoHide feature\n\n\n    _this.handleDocumentMousedown = function (ev) {\n      var onClose = _this.props.onClose; // only hide the popover if the click happened outside the popover\n\n      if (onClose && !_this.rootEl.contains(ev.target)) {\n        onClose();\n      }\n    };\n\n    _this.handleDocumentScroll = function () {\n      _this.repositioner.request(SCROLL_DEBOUNCE);\n    };\n\n    _this.handleCloseClick = function () {\n      var onClose = _this.props.onClose;\n\n      if (onClose) {\n        onClose();\n      }\n    };\n\n    return _this;\n  }\n\n  Popover.prototype.render = function () {\n    var theme = this.context.theme;\n    var props = this.props;\n    var classNames = ['fc-popover', theme.getClass('popover')].concat(props.extraClassNames || []);\n    return createElement(\"div\", __assign({\n      className: classNames.join(' ')\n    }, props.extraAttrs, {\n      ref: this.handleRootEl\n    }), createElement(\"div\", {\n      className: 'fc-popover-header ' + theme.getClass('popoverHeader')\n    }, createElement(\"span\", {\n      className: \"fc-popover-title\"\n    }, props.title), createElement(\"span\", {\n      className: 'fc-popover-close ' + theme.getIconClass('close'),\n      onClick: this.handleCloseClick\n    })), createElement(\"div\", {\n      className: 'fc-popover-body ' + theme.getClass('popoverContent')\n    }, props.children));\n  };\n\n  Popover.prototype.componentDidMount = function () {\n    document.addEventListener('mousedown', this.handleDocumentMousedown);\n    document.addEventListener('scroll', this.handleDocumentScroll);\n    this.updateSize();\n  };\n\n  Popover.prototype.componentWillUnmount = function () {\n    document.removeEventListener('mousedown', this.handleDocumentMousedown);\n    document.removeEventListener('scroll', this.handleDocumentScroll);\n  }; // TODO: adjust on window resize\n\n  /*\n  NOTE: the popover is position:fixed, so coordinates are relative to the viewport\n  NOTE: the PARENT calls this as well, on window resize. we would have wanted to use the repositioner,\n        but need to ensure that all other components have updated size first (for alignmentEl)\n  */\n\n\n  Popover.prototype.updateSize = function () {\n    var _a = this.props,\n        alignmentEl = _a.alignmentEl,\n        topAlignmentEl = _a.topAlignmentEl;\n    var rootEl = this.rootEl;\n\n    if (!rootEl) {\n      return; // not sure why this was null, but we shouldn't let external components call updateSize() anyway\n    }\n\n    var dims = rootEl.getBoundingClientRect(); // only used for width,height\n\n    var alignment = alignmentEl.getBoundingClientRect();\n    var top = topAlignmentEl ? topAlignmentEl.getBoundingClientRect().top : alignment.top;\n    top = Math.min(top, window.innerHeight - dims.height - PADDING_FROM_VIEWPORT);\n    top = Math.max(top, PADDING_FROM_VIEWPORT);\n    var left;\n\n    if (this.context.isRtl) {\n      left = alignment.right - dims.width;\n    } else {\n      left = alignment.left;\n    }\n\n    left = Math.min(left, window.innerWidth - dims.width - PADDING_FROM_VIEWPORT);\n    left = Math.max(left, PADDING_FROM_VIEWPORT);\n    applyStyle(rootEl, {\n      top: top,\n      left: left\n    });\n  };\n\n  return Popover;\n}(BaseComponent);\n\nvar MorePopover =\n/** @class */\nfunction (_super) {\n  __extends(MorePopover, _super);\n\n  function MorePopover() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handlePopoverEl = function (popoverEl) {\n      _this.popoverEl = popoverEl;\n\n      if (popoverEl) {\n        _this.context.registerInteractiveComponent(_this, {\n          el: popoverEl,\n          useEventCenter: false\n        });\n      } else {\n        _this.context.unregisterInteractiveComponent(_this);\n      }\n    };\n\n    return _this;\n  }\n\n  MorePopover.prototype.render = function () {\n    var _a = this.context,\n        options = _a.options,\n        dateEnv = _a.dateEnv;\n    var props = this.props;\n    var date = props.date,\n        hiddenInstances = props.hiddenInstances,\n        todayRange = props.todayRange,\n        dateProfile = props.dateProfile,\n        selectedInstanceId = props.selectedInstanceId;\n    var title = dateEnv.format(date, options.dayPopoverFormat);\n    return createElement(DayCellRoot, {\n      date: date,\n      dateProfile: dateProfile,\n      todayRange: todayRange,\n      elRef: this.handlePopoverEl\n    }, function (rootElRef, dayClassNames, dataAttrs) {\n      return createElement(Popover, {\n        elRef: rootElRef,\n        title: title,\n        extraClassNames: ['fc-more-popover'].concat(dayClassNames),\n        extraAttrs: dataAttrs,\n        onClose: props.onCloseClick,\n        alignmentEl: props.alignmentEl,\n        topAlignmentEl: props.topAlignmentEl\n      }, createElement(DayCellContent, {\n        date: date,\n        dateProfile: dateProfile,\n        todayRange: todayRange\n      }, function (innerElRef, innerContent) {\n        return innerContent && createElement(\"div\", {\n          className: \"fc-more-popover-misc\",\n          ref: innerElRef\n        }, innerContent);\n      }), props.segs.map(function (seg) {\n        var instanceId = seg.eventRange.instance.instanceId;\n        return createElement(\"div\", {\n          className: \"fc-daygrid-event-harness\",\n          key: instanceId,\n          style: {\n            visibility: hiddenInstances[instanceId] ? 'hidden' : ''\n          }\n        }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, __assign({\n          seg: seg,\n          isDragging: false,\n          isSelected: instanceId === selectedInstanceId,\n          defaultDisplayEventEnd: false\n        }, getSegMeta(seg, todayRange))) : createElement(TableBlockEvent, __assign({\n          seg: seg,\n          isDragging: false,\n          isResizing: false,\n          isDateSelecting: false,\n          isSelected: instanceId === selectedInstanceId,\n          defaultDisplayEventEnd: false\n        }, getSegMeta(seg, todayRange))));\n      }));\n    });\n  };\n\n  MorePopover.prototype.queryHit = function (positionLeft, positionTop, elWidth, elHeight) {\n    var date = this.props.date;\n\n    if (positionLeft < elWidth && positionTop < elHeight) {\n      return {\n        component: this,\n        dateSpan: {\n          allDay: true,\n          range: {\n            start: date,\n            end: addDays(date, 1)\n          }\n        },\n        dayEl: this.popoverEl,\n        rect: {\n          left: 0,\n          top: 0,\n          right: elWidth,\n          bottom: elHeight\n        },\n        layer: 1\n      };\n    }\n\n    return null;\n  };\n\n  MorePopover.prototype.isPopover = function () {\n    return true; // gross\n  };\n\n  return MorePopover;\n}(DateComponent);\n\nvar Table =\n/** @class */\nfunction (_super) {\n  __extends(Table, _super);\n\n  function Table() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.splitBusinessHourSegs = memoize(splitSegsByRow);\n    _this.splitBgEventSegs = memoize(splitSegsByRow);\n    _this.splitFgEventSegs = memoize(splitSegsByRow);\n    _this.splitDateSelectionSegs = memoize(splitSegsByRow);\n    _this.splitEventDrag = memoize(splitInteractionByRow);\n    _this.splitEventResize = memoize(splitInteractionByRow);\n    _this.buildBuildMoreLinkText = memoize(buildBuildMoreLinkText);\n    _this.rowRefs = new RefMap();\n    _this.state = {\n      morePopoverState: null\n    };\n\n    _this.handleRootEl = function (rootEl) {\n      _this.rootEl = rootEl;\n      setRef(_this.props.elRef, rootEl);\n    };\n\n    _this.handleMoreLinkClick = function (arg) {\n      var context = _this.context;\n      var dateEnv = context.dateEnv;\n      var clickOption = context.options.moreLinkClick;\n\n      function segForPublic(seg) {\n        var _a = seg.eventRange,\n            def = _a.def,\n            instance = _a.instance,\n            range = _a.range;\n        return {\n          event: new EventApi(context, def, instance),\n          start: dateEnv.toDate(range.start),\n          end: dateEnv.toDate(range.end),\n          isStart: seg.isStart,\n          isEnd: seg.isEnd\n        };\n      }\n\n      if (typeof clickOption === 'function') {\n        clickOption = clickOption({\n          date: dateEnv.toDate(arg.date),\n          allDay: true,\n          allSegs: arg.allSegs.map(segForPublic),\n          hiddenSegs: arg.hiddenSegs.map(segForPublic),\n          jsEvent: arg.ev,\n          view: context.viewApi\n        }); // hack to handle void\n      }\n\n      if (!clickOption || clickOption === 'popover') {\n        _this.setState({\n          morePopoverState: __assign(__assign({}, arg), {\n            currentFgEventSegs: _this.props.fgEventSegs\n          })\n        });\n      } else if (typeof clickOption === 'string') {\n        // a view name\n        context.calendarApi.zoomTo(arg.date, clickOption);\n      }\n    };\n\n    _this.handleMorePopoverClose = function () {\n      _this.setState({\n        morePopoverState: null\n      });\n    };\n\n    return _this;\n  }\n\n  Table.prototype.render = function () {\n    var _this = this;\n\n    var props = this.props;\n    var dateProfile = props.dateProfile,\n        dayMaxEventRows = props.dayMaxEventRows,\n        dayMaxEvents = props.dayMaxEvents,\n        expandRows = props.expandRows;\n    var morePopoverState = this.state.morePopoverState;\n    var rowCnt = props.cells.length;\n    var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n    var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n    var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n    var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n    var eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n    var eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n    var buildMoreLinkText = this.buildBuildMoreLinkText(this.context.options.moreLinkText);\n    var limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true; // if rows can't expand to fill fixed height, can't do balanced-height event limit\n    // TODO: best place to normalize these options?\n\n    if (limitViaBalanced && !expandRows) {\n      limitViaBalanced = false;\n      dayMaxEventRows = null;\n      dayMaxEvents = null;\n    }\n\n    var classNames = ['fc-daygrid-body', limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', expandRows ? '' : 'fc-daygrid-body-natural'];\n    return createElement(\"div\", {\n      className: classNames.join(' '),\n      ref: this.handleRootEl,\n      style: {\n        // these props are important to give this wrapper correct dimensions for interactions\n        // TODO: if we set it here, can we avoid giving to inner tables?\n        width: props.clientWidth,\n        minWidth: props.tableMinWidth\n      }\n    }, createElement(NowTimer, {\n      unit: \"day\"\n    }, function (nowDate, todayRange) {\n      return createElement(Fragment, null, createElement(\"table\", {\n        className: \"fc-scrollgrid-sync-table\",\n        style: {\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth,\n          height: expandRows ? props.clientHeight : ''\n        }\n      }, props.colGroupNode, createElement(\"tbody\", null, props.cells.map(function (cells, row) {\n        return createElement(TableRow, {\n          ref: _this.rowRefs.createRef(row),\n          key: cells.length ? cells[0].date.toISOString()\n          /* best? or put key on cell? or use diff formatter? */\n          : row // in case there are no cells (like when resource view is loading)\n          ,\n          showDayNumbers: rowCnt > 1,\n          showWeekNumbers: props.showWeekNumbers,\n          todayRange: todayRange,\n          dateProfile: dateProfile,\n          cells: cells,\n          renderIntro: props.renderRowIntro,\n          businessHourSegs: businessHourSegsByRow[row],\n          eventSelection: props.eventSelection,\n          bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay)\n          /* hack */\n          ,\n          fgEventSegs: fgEventSegsByRow[row],\n          dateSelectionSegs: dateSelectionSegsByRow[row],\n          eventDrag: eventDragByRow[row],\n          eventResize: eventResizeByRow[row],\n          dayMaxEvents: dayMaxEvents,\n          dayMaxEventRows: dayMaxEventRows,\n          clientWidth: props.clientWidth,\n          clientHeight: props.clientHeight,\n          buildMoreLinkText: buildMoreLinkText,\n          onMoreClick: _this.handleMoreLinkClick\n        });\n      }))), !props.forPrint && morePopoverState && morePopoverState.currentFgEventSegs === props.fgEventSegs && createElement(MorePopover, {\n        date: morePopoverState.date,\n        dateProfile: dateProfile,\n        segs: morePopoverState.allSegs,\n        alignmentEl: morePopoverState.dayEl,\n        topAlignmentEl: rowCnt === 1 ? props.headerAlignElRef.current : null,\n        onCloseClick: _this.handleMorePopoverClose,\n        selectedInstanceId: props.eventSelection,\n        hiddenInstances: // yuck\n        (props.eventDrag ? props.eventDrag.affectedInstances : null) || (props.eventResize ? props.eventResize.affectedInstances : null) || {},\n        todayRange: todayRange\n      }));\n    }));\n  }; // Hit System\n  // ----------------------------------------------------------------------------------------------------\n\n\n  Table.prototype.prepareHits = function () {\n    this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map(function (rowObj) {\n      return rowObj.getCellEls()[0];\n    }), // first cell el in each row. TODO: not optimal\n    false, true);\n    this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n    true, // horizontal\n    false);\n  };\n\n  Table.prototype.positionToHit = function (leftPosition, topPosition) {\n    var _a = this,\n        colPositions = _a.colPositions,\n        rowPositions = _a.rowPositions;\n\n    var col = colPositions.leftToIndex(leftPosition);\n    var row = rowPositions.topToIndex(topPosition);\n\n    if (row != null && col != null) {\n      return {\n        row: row,\n        col: col,\n        dateSpan: {\n          range: this.getCellRange(row, col),\n          allDay: true\n        },\n        dayEl: this.getCellEl(row, col),\n        relativeRect: {\n          left: colPositions.lefts[col],\n          right: colPositions.rights[col],\n          top: rowPositions.tops[row],\n          bottom: rowPositions.bottoms[row]\n        }\n      };\n    }\n\n    return null;\n  };\n\n  Table.prototype.getCellEl = function (row, col) {\n    return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n  };\n\n  Table.prototype.getCellRange = function (row, col) {\n    var start = this.props.cells[row][col].date;\n    var end = addDays(start, 1);\n    return {\n      start: start,\n      end: end\n    };\n  };\n\n  return Table;\n}(DateComponent);\n\nfunction buildBuildMoreLinkText(moreLinkTextInput) {\n  if (typeof moreLinkTextInput === 'function') {\n    return moreLinkTextInput;\n  }\n\n  return function (num) {\n    return \"+\" + num + \" \" + moreLinkTextInput;\n  };\n}\n\nfunction isSegAllDay(seg) {\n  return seg.eventRange.def.allDay;\n}\n\nvar DayTableSlicer =\n/** @class */\nfunction (_super) {\n  __extends(DayTableSlicer, _super);\n\n  function DayTableSlicer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.forceDayIfListItem = true;\n    return _this;\n  }\n\n  DayTableSlicer.prototype.sliceRange = function (dateRange, dayTableModel) {\n    return dayTableModel.sliceRange(dateRange);\n  };\n\n  return DayTableSlicer;\n}(Slicer);\n\nvar DayTable =\n/** @class */\nfunction (_super) {\n  __extends(DayTable, _super);\n\n  function DayTable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.slicer = new DayTableSlicer();\n    _this.tableRef = createRef();\n\n    _this.handleRootEl = function (rootEl) {\n      if (rootEl) {\n        _this.context.registerInteractiveComponent(_this, {\n          el: rootEl\n        });\n      } else {\n        _this.context.unregisterInteractiveComponent(_this);\n      }\n    };\n\n    return _this;\n  }\n\n  DayTable.prototype.render = function () {\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    return createElement(Table, __assign({\n      ref: this.tableRef,\n      elRef: this.handleRootEl\n    }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), {\n      dateProfile: props.dateProfile,\n      cells: props.dayTableModel.cells,\n      colGroupNode: props.colGroupNode,\n      tableMinWidth: props.tableMinWidth,\n      renderRowIntro: props.renderRowIntro,\n      dayMaxEvents: props.dayMaxEvents,\n      dayMaxEventRows: props.dayMaxEventRows,\n      showWeekNumbers: props.showWeekNumbers,\n      expandRows: props.expandRows,\n      headerAlignElRef: props.headerAlignElRef,\n      clientWidth: props.clientWidth,\n      clientHeight: props.clientHeight,\n      forPrint: props.forPrint\n    }));\n  };\n\n  DayTable.prototype.prepareHits = function () {\n    this.tableRef.current.prepareHits();\n  };\n\n  DayTable.prototype.queryHit = function (positionLeft, positionTop) {\n    var rawHit = this.tableRef.current.positionToHit(positionLeft, positionTop);\n\n    if (rawHit) {\n      return {\n        component: this,\n        dateSpan: rawHit.dateSpan,\n        dayEl: rawHit.dayEl,\n        rect: {\n          left: rawHit.relativeRect.left,\n          right: rawHit.relativeRect.right,\n          top: rawHit.relativeRect.top,\n          bottom: rawHit.relativeRect.bottom\n        },\n        layer: 0\n      };\n    }\n\n    return null;\n  };\n\n  return DayTable;\n}(DateComponent);\n\nvar DayTableView =\n/** @class */\nfunction (_super) {\n  __extends(DayTableView, _super);\n\n  function DayTableView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.buildDayTableModel = memoize(buildDayTableModel);\n    _this.headerRef = createRef();\n    _this.tableRef = createRef();\n    return _this;\n  }\n\n  DayTableView.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.context,\n        options = _a.options,\n        dateProfileGenerator = _a.dateProfileGenerator;\n    var props = this.props;\n    var dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n    var headerContent = options.dayHeaders && createElement(DayHeader, {\n      ref: this.headerRef,\n      dateProfile: props.dateProfile,\n      dates: dayTableModel.headerDates,\n      datesRepDistinctDays: dayTableModel.rowCnt === 1\n    });\n\n    var bodyContent = function (contentArg) {\n      return createElement(DayTable, {\n        ref: _this.tableRef,\n        dateProfile: props.dateProfile,\n        dayTableModel: dayTableModel,\n        businessHours: props.businessHours,\n        dateSelection: props.dateSelection,\n        eventStore: props.eventStore,\n        eventUiBases: props.eventUiBases,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        nextDayThreshold: options.nextDayThreshold,\n        colGroupNode: contentArg.tableColGroupNode,\n        tableMinWidth: contentArg.tableMinWidth,\n        dayMaxEvents: options.dayMaxEvents,\n        dayMaxEventRows: options.dayMaxEventRows,\n        showWeekNumbers: options.weekNumbers,\n        expandRows: !props.isHeightAuto,\n        headerAlignElRef: _this.headerElRef,\n        clientWidth: contentArg.clientWidth,\n        clientHeight: contentArg.clientHeight,\n        forPrint: props.forPrint\n      });\n    };\n\n    return options.dayMinWidth ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth) : this.renderSimpleLayout(headerContent, bodyContent);\n  };\n\n  return DayTableView;\n}(TableView);\n\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n  var daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n  return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nvar TableDateProfileGenerator =\n/** @class */\nfunction (_super) {\n  __extends(TableDateProfileGenerator, _super);\n\n  function TableDateProfileGenerator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // Computes the date range that will be rendered.\n\n\n  TableDateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {\n    var dateEnv = this.props.dateEnv;\n\n    var renderRange = _super.prototype.buildRenderRange.call(this, currentRange, currentRangeUnit, isRangeAllDay);\n\n    var start = renderRange.start;\n    var end = renderRange.end;\n    var endOfWeek; // year and month views should be aligned with weeks. this is already done for week\n\n    if (/^(year|month)$/.test(currentRangeUnit)) {\n      start = dateEnv.startOfWeek(start); // make end-of-week if not already\n\n      endOfWeek = dateEnv.startOfWeek(end);\n\n      if (endOfWeek.valueOf() !== end.valueOf()) {\n        end = addWeeks(endOfWeek, 1);\n      }\n    } // ensure 6 weeks\n\n\n    if (this.props.monthMode && this.props.fixedWeekCount) {\n      var rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n      diffWeeks(start, end));\n      end = addWeeks(end, 6 - rowCnt);\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  };\n\n  return TableDateProfileGenerator;\n}(DateProfileGenerator);\n\nvar OPTION_REFINERS = {\n  moreLinkClick: identity,\n  moreLinkClassNames: identity,\n  moreLinkContent: identity,\n  moreLinkDidMount: identity,\n  moreLinkWillUnmount: identity\n};\nvar main = createPlugin({\n  initialView: 'dayGridMonth',\n  optionRefiners: OPTION_REFINERS,\n  views: {\n    dayGrid: {\n      component: DayTableView,\n      dateProfileGeneratorClass: TableDateProfileGenerator\n    },\n    dayGridDay: {\n      type: 'dayGrid',\n      duration: {\n        days: 1\n      }\n    },\n    dayGridWeek: {\n      type: 'dayGrid',\n      duration: {\n        weeks: 1\n      }\n    },\n    dayGridMonth: {\n      type: 'dayGrid',\n      duration: {\n        months: 1\n      },\n      monthMode: true,\n      fixedWeekCount: true\n    }\n  }\n});\nexport default main;\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableView, buildDayTableModel };","map":{"version":3,"sources":["src/TableView.tsx","src/TableSeg.ts","src/TableCellTop.tsx","src/TableCell.tsx","src/event-rendering.ts","src/TableListItemEvent.tsx","src/TableBlockEvent.tsx","src/event-placement.ts","src/TableRow.tsx","src/Popover.tsx","src/MorePopover.tsx","src/Table.tsx","src/DayTableSlicer.tsx","src/DayTable.tsx","src/DayTableView.tsx","src/TableDateProfileGenerator.ts","src/options.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  VNode, createElement,\n  SimpleScrollGrid,\n  SimpleScrollGridSection,\n  ChunkContentCallbackArgs,\n  createRef,\n  ScrollGridSectionConfig,\n  ViewRoot,\n  DateComponent,\n  ViewProps,\n  RefObject,\n  renderScrollShim,\n  getStickyHeaderDates,\n  getStickyFooterScrollbar,\n  ChunkConfigRowContent,\n  Dictionary,\n} from '@fullcalendar/common'\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\n\nexport abstract class TableView<State=Dictionary> extends DateComponent<ViewProps, State> {\n  protected headerElRef: RefObject<HTMLTableCellElement> = createRef<HTMLTableCellElement>()\n\n  renderSimpleLayout(\n    headerRowContent: ChunkConfigRowContent,\n    bodyContent: (contentArg: ChunkContentCallbackArgs) => VNode,\n  ) {\n    let { props, context } = this\n    let sections: SimpleScrollGridSection[] = []\n    let stickyHeaderDates = getStickyHeaderDates(context.options)\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent,\n        },\n      })\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunk: { content: bodyContent },\n    })\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={['fc-daygrid'].concat(classNames).join(' ')}>\n            <SimpleScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              cols={[] /* TODO: make optional? */}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n\n  renderHScrollLayout(\n    headerRowContent: ChunkConfigRowContent,\n    bodyContent: (contentArg: ChunkContentCallbackArgs) => VNode,\n    colCnt: number,\n    dayMinWidth: number,\n  ) {\n    let ScrollGrid = this.context.pluginHooks.scrollGridImpl\n\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation')\n    }\n\n    let { props, context } = this\n    let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options)\n    let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options)\n    let sections: ScrollGridSectionConfig[] = []\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'main',\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent,\n        }],\n      })\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunks: [{\n        key: 'main',\n        content: bodyContent,\n      }],\n    })\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'main',\n          content: renderScrollShim,\n        }],\n      })\n    }\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={['fc-daygrid'].concat(classNames).join(' ')}>\n            <ScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              colGroups={[{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }]}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n}\n","import { EventSegUiInteractionState, Seg } from '@fullcalendar/common'\n\n// this is a DATA STRUCTURE, not a component\n\nexport interface TableSeg extends Seg {\n  row: number\n  firstCol: number\n  lastCol: number\n}\n\nexport function splitSegsByRow(segs: TableSeg[], rowCnt: number) {\n  let byRow: TableSeg[][] = []\n\n  for (let i = 0; i < rowCnt; i += 1) {\n    byRow[i] = []\n  }\n\n  for (let seg of segs) {\n    byRow[seg.row].push(seg)\n  }\n\n  return byRow\n}\n\nexport function splitSegsByFirstCol(segs: TableSeg[], colCnt: number) {\n  let byCol: TableSeg[][] = []\n\n  for (let i = 0; i < colCnt; i += 1) {\n    byCol[i] = []\n  }\n\n  for (let seg of segs) {\n    byCol[seg.firstCol].push(seg)\n  }\n\n  return byCol\n}\n\nexport function splitInteractionByRow(ui: EventSegUiInteractionState | null, rowCnt: number) {\n  let byRow: EventSegUiInteractionState[] = []\n\n  if (!ui) {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null\n    }\n  } else {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: [],\n      }\n    }\n\n    for (let seg of ui.segs) {\n      byRow[seg.row].segs.push(seg)\n    }\n  }\n\n  return byRow\n}\n","import {\n  createElement,\n  DateMarker,\n  DateRange,\n  buildNavLinkData,\n  DayCellContentArg,\n  DayCellContent,\n  BaseComponent,\n  DateProfile,\n  Dictionary,\n  Fragment,\n} from '@fullcalendar/common'\n\ninterface TableCellTopProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  showDayNumber: boolean\n  forceDayTop: boolean // hack to force-create an element with height (created by a nbsp)\n  todayRange: DateRange\n  extraHookProps?: Dictionary\n}\n\nexport class TableCellTop extends BaseComponent<TableCellTopProps> {\n  render() {\n    let { props } = this\n\n    let navLinkAttrs = this.context.options.navLinks\n      ? { 'data-navlink': buildNavLinkData(props.date), tabIndex: 0 }\n      : {}\n\n    return (\n      <DayCellContent\n        date={props.date}\n        dateProfile={props.dateProfile}\n        todayRange={props.todayRange}\n        showDayNumber={props.showDayNumber}\n        extraHookProps={props.extraHookProps}\n        defaultContent={renderTopInner}\n      >\n        {(innerElRef, innerContent) => (\n          (innerContent || props.forceDayTop) && (\n            <div className=\"fc-daygrid-day-top\" ref={innerElRef}>\n              <a className=\"fc-daygrid-day-number\" {...navLinkAttrs}>\n                {innerContent || <Fragment>&nbsp;</Fragment>}\n              </a>\n            </div>\n          )\n        )}\n      </DayCellContent>\n    )\n  }\n}\n\nfunction renderTopInner(props: DayCellContentArg) {\n  return props.dayNumberText\n}\n","import {\n  Ref,\n  ComponentChildren,\n  createElement,\n  DateMarker,\n  DateComponent,\n  CssDimValue,\n  DateRange,\n  buildNavLinkData,\n  RenderHook,\n  WeekNumberRoot,\n  DayCellRoot,\n  DateProfile,\n  VUIEvent,\n  setRef,\n  createFormatter,\n  ViewApi,\n  Dictionary,\n  MountArg,\n} from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\nimport { TableCellTop } from './TableCellTop'\n\nexport interface TableCellProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  extraHookProps?: Dictionary\n  extraDataAttrs?: Dictionary\n  extraClassNames?: string[]\n  elRef?: Ref<HTMLTableCellElement>\n  innerElRef?: Ref<HTMLDivElement>\n  bgContent: ComponentChildren\n  fgContentElRef?: Ref<HTMLDivElement> // TODO: rename!!! classname confusion. is the \"event\" div\n  fgContent: ComponentChildren\n  fgPaddingBottom: CssDimValue\n  // hasEvents: boolean // TODO: when reviving, event should \"have events\" even when none *start* on the cell\n  moreCnt: number\n  moreMarginTop: number\n  showDayNumber: boolean\n  showWeekNumber: boolean\n  forceDayTop: boolean\n  todayRange: DateRange\n  buildMoreLinkText: (num: number) => string\n  onMoreClick?: (arg: MoreLinkArg) => void\n  segsByEachCol: TableSeg[] // for more-popover. includes segs that aren't rooted in this cell but that pass over it\n  segIsHidden: { [instanceId: string]: boolean } // for more-popover. TODO: rename to be about selected instances\n}\n\nexport interface TableCellModel { // TODO: move somewhere else. combine with DayTableCell?\n  key: string\n  date: DateMarker\n  extraHookProps?: Dictionary\n  extraDataAttrs?: Dictionary\n  extraClassNames?: string[]\n}\n\nexport interface MoreLinkArg {\n  date: DateMarker\n  allSegs: TableSeg[]\n  hiddenSegs: TableSeg[]\n  moreCnt: number\n  dayEl: HTMLElement\n  ev: VUIEvent\n}\n\nexport interface HookProps {\n  date: Date\n  isPast: boolean\n  isFuture: boolean\n  isToday: boolean\n}\n\nexport interface MoreLinkContentArg {\n  num: number\n  text: string\n  view: ViewApi\n}\n\nexport type MoreLinkMountArg = MountArg<MoreLinkContentArg>\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' })\n\nexport class TableCell extends DateComponent<TableCellProps> {\n  private rootEl: HTMLElement\n\n  render() {\n    let { options, viewApi } = this.context\n    let { props } = this\n    let { date, dateProfile } = props\n\n    let hookProps: MoreLinkContentArg = {\n      num: props.moreCnt,\n      text: props.buildMoreLinkText(props.moreCnt),\n      view: viewApi,\n    }\n\n    let navLinkAttrs = options.navLinks\n      ? { 'data-navlink': buildNavLinkData(date, 'week'), tabIndex: 0 }\n      : {}\n\n    return (\n      <DayCellRoot\n        date={date}\n        dateProfile={dateProfile}\n        todayRange={props.todayRange}\n        showDayNumber={props.showDayNumber}\n        extraHookProps={props.extraHookProps}\n        elRef={this.handleRootEl}\n      >\n        {(dayElRef, dayClassNames, rootDataAttrs, isDisabled) => (\n          <td\n            ref={dayElRef}\n            className={['fc-daygrid-day'].concat(dayClassNames, props.extraClassNames || []).join(' ')}\n            {...rootDataAttrs}\n            {...props.extraDataAttrs}\n          >\n            <div className=\"fc-daygrid-day-frame fc-scrollgrid-sync-inner\" ref={props.innerElRef /* different from hook system! RENAME */}>\n              {props.showWeekNumber && (\n                <WeekNumberRoot date={date} defaultFormat={DEFAULT_WEEK_NUM_FORMAT}>\n                  {(weekElRef, weekClassNames, innerElRef, innerContent) => (\n                    <a\n                      ref={weekElRef}\n                      className={['fc-daygrid-week-number'].concat(weekClassNames).join(' ')}\n                      {...navLinkAttrs}\n                    >\n                      {innerContent}\n                    </a>\n                  )}\n                </WeekNumberRoot>\n              )}\n              {!isDisabled && (\n                <TableCellTop\n                  date={date}\n                  dateProfile={dateProfile}\n                  showDayNumber={props.showDayNumber}\n                  forceDayTop={props.forceDayTop}\n                  todayRange={props.todayRange}\n                  extraHookProps={props.extraHookProps}\n                />\n              )}\n              <div\n                className=\"fc-daygrid-day-events\"\n                ref={props.fgContentElRef}\n                style={{ paddingBottom: props.fgPaddingBottom }}\n              >\n                {props.fgContent}\n                {Boolean(props.moreCnt) && (\n                  <div className=\"fc-daygrid-day-bottom\" style={{ marginTop: props.moreMarginTop }}>\n                    <RenderHook<MoreLinkContentArg> // needed?\n                      hookProps={hookProps}\n                      classNames={options.moreLinkClassNames}\n                      content={options.moreLinkContent}\n                      defaultContent={renderMoreLinkInner}\n                      didMount={options.moreLinkDidMount}\n                      willUnmount={options.moreLinkWillUnmount}\n                    >\n                      {(rootElRef, classNames, innerElRef, innerContent) => (\n                        <a\n                          ref={rootElRef}\n                          className={['fc-daygrid-more-link'].concat(classNames).join(' ')}\n                          onClick={this.handleMoreLinkClick}\n                        >\n                          {innerContent}\n                        </a>\n                      )}\n                    </RenderHook>\n                  </div>\n                )}\n              </div>\n              <div className=\"fc-daygrid-day-bg\">\n                {props.bgContent}\n              </div>\n            </div>\n          </td>\n        )}\n      </DayCellRoot>\n    )\n  }\n\n  handleRootEl = (el: HTMLElement) => {\n    this.rootEl = el\n\n    setRef(this.props.elRef, el)\n  }\n\n  handleMoreLinkClick = (ev: VUIEvent) => {\n    let { props } = this\n\n    if (props.onMoreClick) {\n      let allSegs = props.segsByEachCol\n      let hiddenSegs = allSegs.filter(\n        (seg: TableSeg) => props.segIsHidden[seg.eventRange.instance.instanceId],\n      )\n\n      props.onMoreClick({\n        date: props.date,\n        allSegs,\n        hiddenSegs,\n        moreCnt: props.moreCnt,\n        dayEl: this.rootEl,\n        ev,\n      })\n    }\n  }\n}\n\nfunction renderMoreLinkInner(props) {\n  return props.text\n}\n","import { createFormatter } from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport const DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow',\n})\n\nexport function hasListItemDisplay(seg: TableSeg) {\n  let { display } = seg.eventRange.ui\n\n  return display === 'list-item' || (\n    display === 'auto' &&\n    !seg.eventRange.def.allDay &&\n    seg.firstCol === seg.lastCol && // can't be multi-day\n    seg.isStart && // \"\n    seg.isEnd // \"\n  )\n}\n","import { createElement, BaseComponent, Seg, EventRoot, buildSegTimeText, EventContentArg, Fragment } from '@fullcalendar/common'\nimport { DEFAULT_TABLE_EVENT_TIME_FORMAT } from './event-rendering'\n\nexport interface DotTableEventProps {\n  seg: Seg\n  isDragging: boolean\n  isSelected: boolean\n  isPast: boolean\n  isFuture: boolean\n  isToday: boolean\n  defaultDisplayEventEnd: boolean\n}\n\nexport class TableListItemEvent extends BaseComponent<DotTableEventProps> {\n  render() {\n    let { props, context } = this\n    let timeFormat = context.options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT\n    let timeText = buildSegTimeText(\n      props.seg,\n      timeFormat,\n      context,\n      true,\n      props.defaultDisplayEventEnd,\n    )\n\n    return (\n      <EventRoot\n        seg={props.seg}\n        timeText={timeText}\n        defaultContent={renderInnerContent}\n        isDragging={props.isDragging}\n        isResizing={false}\n        isDateSelecting={false}\n        isSelected={props.isSelected}\n        isPast={props.isPast}\n        isFuture={props.isFuture}\n        isToday={props.isToday}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent) => ( // we don't use styles!\n          <a\n            className={['fc-daygrid-event', 'fc-daygrid-dot-event'].concat(classNames).join(' ')}\n            ref={rootElRef}\n            {...getSegAnchorAttrs(props.seg)}\n          >\n            {innerContent}\n          </a>\n        )}\n      </EventRoot>\n    )\n  }\n}\n\nfunction renderInnerContent(innerProps: EventContentArg) {\n  return (\n    <Fragment>\n      <div\n        className=\"fc-daygrid-event-dot\"\n        style={{ borderColor: innerProps.borderColor || innerProps.backgroundColor }}\n      />\n      {innerProps.timeText && (\n        <div className=\"fc-event-time\">{innerProps.timeText}</div>\n      )}\n      <div className=\"fc-event-title\">\n        {innerProps.event.title || <Fragment>&nbsp;</Fragment>}\n      </div>\n    </Fragment>\n  )\n}\n\nfunction getSegAnchorAttrs(seg: Seg) { // not dry. in StandardEvent too\n  let { url } = seg.eventRange.def\n  return url ? { href: url } : {}\n}\n","import { createElement, StandardEvent, BaseComponent, MinimalEventProps } from '@fullcalendar/common'\nimport { DEFAULT_TABLE_EVENT_TIME_FORMAT } from './event-rendering'\n\nexport interface TableBlockEventProps extends MinimalEventProps {\n  defaultDisplayEventEnd: boolean\n}\n\nexport class TableBlockEvent extends BaseComponent<TableBlockEventProps> {\n  render() {\n    let { props } = this\n\n    return (\n      <StandardEvent\n        {...props}\n        extraClassNames={['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event']}\n        defaultTimeFormat={DEFAULT_TABLE_EVENT_TIME_FORMAT}\n        defaultDisplayEventEnd={props.defaultDisplayEventEnd}\n        disableResizing={!props.seg.eventRange.def.allDay}\n      />\n    )\n  }\n}\n","import {\n  sortEventSegs,\n  OrderSpec,\n  EventApi,\n  EventRenderRange,\n  addDays,\n  intersectRanges,\n  DateMarker,\n} from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\nimport { TableCellModel } from './TableCell'\n\ninterface TableSegPlacement {\n  seg: TableSeg\n  top: number\n  bottom: number\n}\n\nexport function computeFgSegPlacement( // for one row. TODO: print mode?\n  cellModels: TableCellModel[],\n  segs: TableSeg[],\n  dayMaxEvents: boolean | number,\n  dayMaxEventRows: boolean | number,\n  eventHeights: { [instanceIdAndFirstCol: string]: number },\n  maxContentHeight: number | null,\n  colCnt: number,\n  eventOrderSpecs: OrderSpec<EventApi>[],\n) {\n  let colPlacements: TableSegPlacement[][] = [] // if event spans multiple cols, its present in each col\n  let moreCnts: number[] = [] // by-col\n  let segIsHidden: { [instanceId: string]: boolean } = {}\n  let segTops: { [instanceId: string]: number } = {} // always populated for each seg\n  let segMarginTops: { [instanceId: string]: number } = {} // simetimes populated for each seg\n  let moreTops: { [col: string]: number } = {}\n  let paddingBottoms: { [col: string]: number } = {} // for each cell's inner-wrapper div\n\n  for (let i = 0; i < colCnt; i += 1) {\n    colPlacements.push([])\n    moreCnts.push(0)\n  }\n\n  segs = sortEventSegs(segs, eventOrderSpecs) as TableSeg[]\n\n  for (let seg of segs) {\n    let { instanceId } = seg.eventRange.instance\n    let eventHeight = eventHeights[instanceId + ':' + seg.firstCol]\n\n    placeSeg(seg, eventHeight || 0) // will keep colPlacements sorted by top\n  }\n\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    limitByMaxHeight(moreCnts, segIsHidden, colPlacements, maxContentHeight) // populates moreCnts/segIsHidden\n  } else if (typeof dayMaxEvents === 'number') {\n    limitByMaxEvents(moreCnts, segIsHidden, colPlacements, dayMaxEvents) // populates moreCnts/segIsHidden\n  } else if (typeof dayMaxEventRows === 'number') {\n    limitByMaxRows(moreCnts, segIsHidden, colPlacements, dayMaxEventRows) // populates moreCnts/segIsHidden\n  }\n\n  // computes segTops/segMarginTops/moreTops/paddingBottoms\n  for (let col = 0; col < colCnt; col += 1) {\n    let placements = colPlacements[col]\n    let currentNonAbsBottom = 0\n    let currentAbsHeight = 0\n\n    for (let placement of placements) {\n      let seg = placement.seg\n\n      if (!segIsHidden[seg.eventRange.instance.instanceId]) {\n        segTops[seg.eventRange.instance.instanceId] = placement.top // from top of container\n\n        if (seg.firstCol === seg.lastCol && seg.isStart && seg.isEnd) { // TODO: simpler way? NOT DRY\n          segMarginTops[seg.eventRange.instance.instanceId] =\n            placement.top - currentNonAbsBottom // from previous seg bottom\n\n          currentAbsHeight = 0\n          currentNonAbsBottom = placement.bottom\n        } else { // multi-col event, abs positioned\n          currentAbsHeight = placement.bottom - currentNonAbsBottom\n        }\n      }\n    }\n\n    if (currentAbsHeight) {\n      if (moreCnts[col]) {\n        moreTops[col] = currentAbsHeight\n      } else {\n        paddingBottoms[col] = currentAbsHeight\n      }\n    }\n  }\n\n  function placeSeg(seg, segHeight) {\n    if (!tryPlaceSegAt(seg, segHeight, 0)) {\n      for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n        for (let placement of colPlacements[col]) { // will repeat multi-day segs!!!!!!! bad!!!!!!\n          if (tryPlaceSegAt(seg, segHeight, placement.bottom)) {\n            return\n          }\n        }\n      }\n    }\n  }\n\n  function tryPlaceSegAt(seg, segHeight, top) {\n    if (canPlaceSegAt(seg, segHeight, top)) {\n      for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n        let placements = colPlacements[col]\n        let insertionIndex = 0\n\n        while (\n          insertionIndex < placements.length &&\n          top >= placements[insertionIndex].top\n        ) {\n          insertionIndex += 1\n        }\n\n        placements.splice(insertionIndex, 0, { // will keep it sorted by top\n          seg,\n          top,\n          bottom: top + segHeight,\n        })\n      }\n\n      return true\n    }\n\n    return false\n  }\n\n  function canPlaceSegAt(seg, segHeight, top) {\n    for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n      for (let placement of colPlacements[col]) {\n        if (top < placement.bottom && top + segHeight > placement.top) { // collide?\n          return false\n        }\n      }\n    }\n\n    return true\n  }\n\n  // what does this do!?\n  for (let instanceIdAndFirstCol in eventHeights) {\n    if (!eventHeights[instanceIdAndFirstCol]) {\n      segIsHidden[instanceIdAndFirstCol.split(':')[0]] = true\n    }\n  }\n\n  let segsByFirstCol = colPlacements.map(extractFirstColSegs) // operates on the sorted cols\n  let segsByEachCol = colPlacements.map((placements, col) => {\n    let segsForCols = extractAllColSegs(placements)\n    segsForCols = resliceDaySegs(segsForCols, cellModels[col].date, col)\n    return segsForCols\n  })\n\n  return {\n    segsByFirstCol,\n    segsByEachCol,\n    segIsHidden,\n    segTops,\n    segMarginTops,\n    moreCnts,\n    moreTops,\n    paddingBottoms,\n  }\n}\n\nfunction extractFirstColSegs(oneColPlacements: TableSegPlacement[], col: number) {\n  let segs: TableSeg[] = []\n\n  for (let placement of oneColPlacements) {\n    if (placement.seg.firstCol === col) {\n      segs.push(placement.seg)\n    }\n  }\n\n  return segs\n}\n\nfunction extractAllColSegs(oneColPlacements: TableSegPlacement[]) {\n  let segs: TableSeg[] = []\n\n  for (let placement of oneColPlacements) {\n    segs.push(placement.seg)\n  }\n\n  return segs\n}\n\nfunction limitByMaxHeight(hiddenCnts, segIsHidden, colPlacements, maxContentHeight) {\n  limitEvents(\n    hiddenCnts,\n    segIsHidden,\n    colPlacements,\n    true,\n    (placement) => placement.bottom <= maxContentHeight,\n  )\n}\n\nfunction limitByMaxEvents(hiddenCnts, segIsHidden, colPlacements, dayMaxEvents) {\n  limitEvents(\n    hiddenCnts,\n    segIsHidden,\n    colPlacements,\n    false,\n    (placement, levelIndex) => levelIndex < dayMaxEvents,\n  )\n}\n\nfunction limitByMaxRows(hiddenCnts, segIsHidden, colPlacements, dayMaxEventRows) {\n  limitEvents(\n    hiddenCnts,\n    segIsHidden,\n    colPlacements,\n    true,\n    (placement, levelIndex) => levelIndex < dayMaxEventRows,\n  )\n}\n\n/*\npopulates the given hiddenCnts/segIsHidden, which are supplied empty.\nTODO: return them instead\n*/\nfunction limitEvents(hiddenCnts, segIsHidden, colPlacements, _moreLinkConsumesLevel, isPlacementInBounds) {\n  let colCnt = hiddenCnts.length\n  let segIsVisible = {} as any // TODO: instead, use segIsHidden with true/false?\n  let visibleColPlacements = [] // will mirror colPlacements\n\n  for (let col = 0; col < colCnt; col += 1) {\n    visibleColPlacements.push([])\n  }\n\n  for (let col = 0; col < colCnt; col += 1) {\n    let placements = colPlacements[col]\n    let level = 0\n\n    for (let placement of placements) {\n      if (isPlacementInBounds(placement, level)) {\n        recordVisible(placement)\n      } else {\n        recordHidden(placement, level, _moreLinkConsumesLevel)\n      }\n\n      // only considered a level if the seg had height\n      if (placement.top !== placement.bottom) {\n        level += 1\n      }\n    }\n  }\n\n  function recordVisible(placement) {\n    let { seg } = placement\n    let { instanceId } = seg.eventRange.instance\n\n    if (!segIsVisible[instanceId]) {\n      segIsVisible[instanceId] = true\n\n      for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n        visibleColPlacements[col].push(placement)\n      }\n    }\n  }\n\n  function recordHidden(placement, currentLevel, moreLinkConsumesLevel) {\n    let { seg } = placement\n    let { instanceId } = seg.eventRange.instance\n\n    if (!segIsHidden[instanceId]) {\n      segIsHidden[instanceId] = true\n\n      for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n        hiddenCnts[col] += 1\n        let hiddenCnt = hiddenCnts[col]\n\n        if (moreLinkConsumesLevel && hiddenCnt === 1 && currentLevel > 0) {\n          let doomedLevel = currentLevel - 1\n\n          while (visibleColPlacements[col].length > doomedLevel) {\n            recordHidden(\n              visibleColPlacements[col].pop(), // removes\n              visibleColPlacements[col].length, // will execute after the pop. will be the index of the removed placement\n              false,\n            )\n          }\n        }\n      }\n    }\n  }\n}\n\n// Given the events within an array of segment objects, reslice them to be in a single day\nfunction resliceDaySegs(segs: TableSeg[], dayDate: DateMarker, colIndex: number) {\n  let dayStart = dayDate\n  let dayEnd = addDays(dayStart, 1)\n  let dayRange = { start: dayStart, end: dayEnd }\n  let newSegs = []\n\n  for (let seg of segs) {\n    let eventRange = seg.eventRange\n    let origRange = eventRange.range\n    let slicedRange = intersectRanges(origRange, dayRange)\n\n    if (slicedRange) {\n      newSegs.push({\n        ...seg,\n        firstCol: colIndex,\n        lastCol: colIndex,\n        eventRange: {\n          def: eventRange.def,\n          ui: { ...eventRange.ui, durationEditable: false }, // hack to disable resizing\n          instance: eventRange.instance,\n          range: slicedRange,\n        } as EventRenderRange,\n        isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n        isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf(),\n      })\n    }\n  }\n\n  return newSegs\n}\n","import {\n  EventSegUiInteractionState,\n  VNode,\n  DateComponent,\n  createElement,\n  PositionCache,\n  RefMap,\n  mapHash,\n  CssDimValue,\n  DateRange,\n  getSegMeta,\n  DateProfile,\n  Fragment,\n  BgEvent,\n  renderFill,\n  isPropsEqual,\n  createRef,\n  buildEventRangeKey,\n} from '@fullcalendar/common'\nimport { TableSeg, splitSegsByFirstCol } from './TableSeg'\nimport { TableCell, TableCellModel, MoreLinkArg } from './TableCell'\nimport { TableListItemEvent } from './TableListItemEvent'\nimport { TableBlockEvent } from './TableBlockEvent'\nimport { computeFgSegPlacement } from './event-placement'\nimport { hasListItemDisplay } from './event-rendering'\n\n// TODO: attach to window resize?\n\nexport interface TableRowProps {\n  cells: TableCellModel[]\n  renderIntro?: () => VNode\n  businessHourSegs: TableSeg[]\n  bgEventSegs: TableSeg[]\n  fgEventSegs: TableSeg[]\n  dateSelectionSegs: TableSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  clientWidth: number | null\n  clientHeight: number | null // simply for causing an updateSize, for when liquid height\n  onMoreClick?: (arg: MoreLinkArg) => void\n  dateProfile: DateProfile\n  todayRange: DateRange\n  showDayNumbers: boolean\n  showWeekNumbers: boolean\n  buildMoreLinkText: (num: number) => string\n}\n\ninterface TableRowState {\n  framePositions: PositionCache\n  maxContentHeight: number | null\n  segHeights: { [instanceIdAndFirstCol: string]: number } | null\n}\n\nexport class TableRow extends DateComponent<TableRowProps, TableRowState> {\n  private cellElRefs = new RefMap<HTMLTableCellElement>() // the <td>\n  private frameElRefs = new RefMap<HTMLElement>() // the fc-daygrid-day-frame\n  private fgElRefs = new RefMap<HTMLDivElement>() // the fc-daygrid-day-events\n  private segHarnessRefs = new RefMap<HTMLDivElement>() // indexed by \"instanceId:firstCol\"\n  private rootElRef = createRef<HTMLTableRowElement>()\n\n  state: TableRowState = {\n    framePositions: null,\n    maxContentHeight: null,\n    segHeights: {},\n  }\n\n  render() {\n    let { props, state, context } = this\n    let colCnt = props.cells.length\n\n    let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt)\n    let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt)\n    let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt)\n    let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt)\n\n    let { paddingBottoms, segsByFirstCol, segsByEachCol, segIsHidden, segTops, segMarginTops, moreCnts, moreTops } = computeFgSegPlacement(\n      props.cells,\n      props.fgEventSegs,\n      props.dayMaxEvents,\n      props.dayMaxEventRows,\n      state.segHeights,\n      state.maxContentHeight,\n      colCnt,\n      context.options.eventOrder,\n    )\n\n    let selectedInstanceHash = // TODO: messy way to compute this\n      (props.eventDrag && props.eventDrag.affectedInstances) ||\n      (props.eventResize && props.eventResize.affectedInstances) ||\n      {}\n\n    return (\n      <tr ref={this.rootElRef}>\n        {props.renderIntro && props.renderIntro()}\n        {props.cells.map((cell, col) => {\n          let normalFgNodes = this.renderFgSegs(\n            segsByFirstCol[col],\n            segIsHidden,\n            segTops,\n            segMarginTops,\n            selectedInstanceHash,\n            props.todayRange,\n          )\n\n          let mirrorFgNodes = this.renderFgSegs(\n            mirrorSegsByCol[col],\n            {},\n            segTops, // use same tops as real rendering\n            {},\n            {},\n            props.todayRange,\n            Boolean(props.eventDrag),\n            Boolean(props.eventResize),\n            false, // date-selecting (because mirror is never drawn for date selection)\n          )\n\n          return (\n            <TableCell\n              key={cell.key}\n              elRef={this.cellElRefs.createRef(cell.key)}\n              innerElRef={this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */}\n              dateProfile={props.dateProfile}\n              date={cell.date}\n              showDayNumber={props.showDayNumbers}\n              showWeekNumber={props.showWeekNumbers && col === 0}\n              forceDayTop={props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */}\n              todayRange={props.todayRange}\n              extraHookProps={cell.extraHookProps}\n              extraDataAttrs={cell.extraDataAttrs}\n              extraClassNames={cell.extraClassNames}\n              moreCnt={moreCnts[col]}\n              buildMoreLinkText={props.buildMoreLinkText}\n              onMoreClick={props.onMoreClick}\n              segIsHidden={segIsHidden}\n              moreMarginTop={moreTops[col] /* rename */}\n              segsByEachCol={segsByEachCol[col]}\n              fgPaddingBottom={paddingBottoms[col]}\n              fgContentElRef={this.fgElRefs.createRef(cell.key)}\n              fgContent={( // Fragment scopes the keys\n                <Fragment>\n                  <Fragment>{normalFgNodes}</Fragment>\n                  <Fragment>{mirrorFgNodes}</Fragment>\n                </Fragment>\n              )}\n              bgContent={( // Fragment scopes the keys\n                <Fragment>\n                  {this.renderFillSegs(highlightSegsByCol[col], 'highlight')}\n                  {this.renderFillSegs(businessHoursByCol[col], 'non-business')}\n                  {this.renderFillSegs(bgEventSegsByCol[col], 'bg-event')}\n                </Fragment>\n              )}\n            />\n          )\n        })}\n      </tr>\n    )\n  }\n\n  componentDidMount() {\n    this.updateSizing(true)\n  }\n\n  componentDidUpdate(prevProps: TableRowProps, prevState: TableRowState) {\n    let currentProps = this.props\n\n    this.updateSizing(\n      !isPropsEqual(prevProps, currentProps),\n    )\n  }\n\n  getHighlightSegs(): TableSeg[] {\n    let { props } = this\n\n    if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n      return props.eventDrag.segs as TableSeg[]\n    }\n\n    if (props.eventResize && props.eventResize.segs.length) { // messy check\n      return props.eventResize.segs as TableSeg[]\n    }\n\n    return props.dateSelectionSegs\n  }\n\n  getMirrorSegs(): TableSeg[] {\n    let { props } = this\n\n    if (props.eventResize && props.eventResize.segs.length) { // messy check\n      return props.eventResize.segs as TableSeg[]\n    }\n\n    return []\n  }\n\n  renderFgSegs(\n    segs: TableSeg[],\n    segIsHidden: { [instanceId: string]: boolean }, // does NOT mean display:hidden\n    segTops: { [instanceId: string]: number },\n    segMarginTops: { [instanceId: string]: number },\n    selectedInstanceHash: { [instanceId: string]: any },\n    todayRange: DateRange,\n    isDragging?: boolean,\n    isResizing?: boolean,\n    isDateSelecting?: boolean,\n  ): VNode[] {\n    let { context } = this\n    let { eventSelection } = this.props\n    let { framePositions } = this.state\n    let defaultDisplayEventEnd = this.props.cells.length === 1 // colCnt === 1\n    let nodes: VNode[] = []\n\n    if (framePositions) {\n      for (let seg of segs) {\n        let instanceId = seg.eventRange.instance.instanceId\n        let isMirror = isDragging || isResizing || isDateSelecting\n        let isSelected = selectedInstanceHash[instanceId]\n        let isInvisible = segIsHidden[instanceId] || isSelected\n\n        // TODO: simpler way? NOT DRY\n        let isAbsolute = segIsHidden[instanceId] || isMirror || seg.firstCol !== seg.lastCol || !seg.isStart || !seg.isEnd\n\n        let marginTop: CssDimValue\n        let top: CssDimValue\n        let left: CssDimValue\n        let right: CssDimValue\n\n        if (isAbsolute) {\n          top = segTops[instanceId]\n\n          if (context.isRtl) {\n            right = 0\n            left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n          } else {\n            left = 0\n            right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n          }\n        } else {\n          marginTop = segMarginTops[instanceId]\n        }\n\n        /*\n        known bug: events that are force to be list-item but span multiple days still take up space in later columns\n        */\n        nodes.push(\n          <div\n            className={'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : '')}\n            key={instanceId}\n            // in print mode when in mult cols, could collide\n            ref={isMirror ? null : this.segHarnessRefs.createRef(instanceId + ':' + seg.firstCol)}\n            style={{\n              visibility: isInvisible ? 'hidden' : ('' as any),\n              marginTop: marginTop || '',\n              top: top || '',\n              left: left || '',\n              right: right || '',\n            }}\n          >\n            {hasListItemDisplay(seg) ? (\n              <TableListItemEvent\n                seg={seg}\n                isDragging={isDragging}\n                isSelected={instanceId === eventSelection}\n                defaultDisplayEventEnd={defaultDisplayEventEnd}\n                {...getSegMeta(seg, todayRange)}\n              />\n            ) : (\n              <TableBlockEvent\n                seg={seg}\n                isDragging={isDragging}\n                isResizing={isResizing}\n                isDateSelecting={isDateSelecting}\n                isSelected={instanceId === eventSelection}\n                defaultDisplayEventEnd={defaultDisplayEventEnd}\n                {...getSegMeta(seg, todayRange)}\n              />\n            )}\n          </div>,\n        )\n      }\n    }\n\n    return nodes\n  }\n\n  renderFillSegs(segs: TableSeg[], fillType: string): VNode {\n    let { isRtl } = this.context\n    let { todayRange } = this.props\n    let { framePositions } = this.state\n    let nodes: VNode[] = []\n\n    if (framePositions) {\n      for (let seg of segs) {\n        let leftRightCss = isRtl ? {\n          right: 0,\n          left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n        } : {\n          left: 0,\n          right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n        }\n\n        nodes.push(\n          <div\n            key={buildEventRangeKey(seg.eventRange)}\n            className=\"fc-daygrid-bg-harness\"\n            style={leftRightCss}\n          >\n            {fillType === 'bg-event' ?\n              <BgEvent seg={seg} {...getSegMeta(seg, todayRange)} /> :\n              renderFill(fillType)}\n          </div>,\n        )\n      }\n    }\n\n    return createElement(Fragment, {}, ...nodes)\n  }\n\n  updateSizing(isExternalSizingChange) {\n    let { props, frameElRefs } = this\n\n    if (props.clientWidth !== null) { // positioning ready?\n      if (isExternalSizingChange) {\n        let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key])\n\n        if (frameEls.length) {\n          let originEl = this.rootElRef.current\n\n          this.setState({ // will trigger isCellPositionsChanged...\n            framePositions: new PositionCache(\n              originEl,\n              frameEls,\n              true, // isHorizontal\n              false,\n            ),\n          })\n        }\n      }\n\n      let limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true\n\n      this.setState({\n        segHeights: this.computeSegHeights(),\n        maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n      })\n    }\n  }\n\n  computeSegHeights() { // query\n    return mapHash(this.segHarnessRefs.currentMap, (eventHarnessEl) => (\n      eventHarnessEl.getBoundingClientRect().height\n    ))\n  }\n\n  computeMaxContentHeight() {\n    let firstKey = this.props.cells[0].key\n    let cellEl = this.cellElRefs.currentMap[firstKey]\n    let fcContainerEl = this.fgElRefs.currentMap[firstKey]\n\n    return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top\n  }\n\n  public getCellEls() {\n    let elMap = this.cellElRefs.currentMap\n\n    return this.props.cells.map((cell) => elMap[cell.key])\n  }\n}\n\nTableRow.addStateEquality({\n  segHeights: isPropsEqual,\n})\n","import { createElement, ComponentChildren, applyStyle, BaseComponent, DelayedRunner, Ref, setRef, Dictionary } from '@fullcalendar/common'\n\nexport interface PopoverProps {\n  title: string\n  extraClassNames?: string[]\n  extraAttrs?: Dictionary\n  alignmentEl: HTMLElement\n  topAlignmentEl?: HTMLElement\n  onClose?: () => void\n  elRef?: Ref<HTMLDivElement>\n  children?: ComponentChildren\n}\n\nconst PADDING_FROM_VIEWPORT = 10\nconst SCROLL_DEBOUNCE = 10\n\nexport class Popover extends BaseComponent<PopoverProps> {\n  private rootEl: HTMLElement\n  private repositioner = new DelayedRunner(this.updateSize.bind(this))\n\n  render() {\n    let { theme } = this.context\n    let { props } = this\n    let classNames = [\n      'fc-popover',\n      theme.getClass('popover'),\n    ].concat(\n      props.extraClassNames || [],\n    )\n\n    return (\n      <div className={classNames.join(' ')} {...props.extraAttrs} ref={this.handleRootEl}>\n        <div className={'fc-popover-header ' + theme.getClass('popoverHeader')}>\n          <span className=\"fc-popover-title\">\n            {props.title}\n          </span>\n          <span className={'fc-popover-close ' + theme.getIconClass('close')} onClick={this.handleCloseClick} />\n        </div>\n        <div className={'fc-popover-body ' + theme.getClass('popoverContent')}>\n          {props.children}\n        </div>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleDocumentMousedown)\n    document.addEventListener('scroll', this.handleDocumentScroll)\n    this.updateSize()\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleDocumentMousedown)\n    document.removeEventListener('scroll', this.handleDocumentScroll)\n  }\n\n  handleRootEl = (el: HTMLElement | null) => {\n    this.rootEl = el\n\n    if (this.props.elRef) {\n      setRef(this.props.elRef, el)\n    }\n  }\n\n  // Triggered when the user clicks *anywhere* in the document, for the autoHide feature\n  handleDocumentMousedown = (ev) => {\n    let { onClose } = this.props\n\n    // only hide the popover if the click happened outside the popover\n    if (onClose && !this.rootEl.contains(ev.target)) {\n      onClose()\n    }\n  }\n\n  handleDocumentScroll = () => {\n    this.repositioner.request(SCROLL_DEBOUNCE)\n  }\n\n  handleCloseClick = () => {\n    let { onClose } = this.props\n\n    if (onClose) {\n      onClose()\n    }\n  }\n\n  // TODO: adjust on window resize\n\n  /*\n  NOTE: the popover is position:fixed, so coordinates are relative to the viewport\n  NOTE: the PARENT calls this as well, on window resize. we would have wanted to use the repositioner,\n        but need to ensure that all other components have updated size first (for alignmentEl)\n  */\n  private updateSize() {\n    let { alignmentEl, topAlignmentEl } = this.props\n    let { rootEl } = this\n\n    if (!rootEl) {\n      return // not sure why this was null, but we shouldn't let external components call updateSize() anyway\n    }\n\n    let dims = rootEl.getBoundingClientRect() // only used for width,height\n    let alignment = alignmentEl.getBoundingClientRect()\n\n    let top = topAlignmentEl ? topAlignmentEl.getBoundingClientRect().top : alignment.top\n    top = Math.min(top, window.innerHeight - dims.height - PADDING_FROM_VIEWPORT)\n    top = Math.max(top, PADDING_FROM_VIEWPORT)\n\n    let left: number\n\n    if (this.context.isRtl) {\n      left = alignment.right - dims.width\n    } else {\n      left = alignment.left\n    }\n\n    left = Math.min(left, window.innerWidth - dims.width - PADDING_FROM_VIEWPORT)\n    left = Math.max(left, PADDING_FROM_VIEWPORT)\n\n    applyStyle(rootEl, { top, left })\n  }\n}\n","import {\n  DateComponent,\n  DateMarker,\n  createElement,\n  EventInstanceHash,\n  Hit,\n  addDays,\n  DateRange,\n  getSegMeta,\n  DayCellRoot,\n  DayCellContent,\n  DateProfile,\n} from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\nimport { TableBlockEvent } from './TableBlockEvent'\nimport { TableListItemEvent } from './TableListItemEvent'\nimport { Popover } from './Popover'\nimport { hasListItemDisplay } from './event-rendering'\n\nexport interface MorePopoverProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  segs: TableSeg[]\n  selectedInstanceId: string\n  hiddenInstances: EventInstanceHash\n  alignmentEl: HTMLElement\n  topAlignmentEl?: HTMLElement\n  onCloseClick?: () => void\n  todayRange: DateRange\n}\n\nexport class MorePopover extends DateComponent<MorePopoverProps> {\n  private popoverEl: HTMLElement\n\n  render() {\n    let { options, dateEnv } = this.context\n    let { props } = this\n    let { date, hiddenInstances, todayRange, dateProfile, selectedInstanceId } = props\n    let title = dateEnv.format(date, options.dayPopoverFormat)\n\n    return (\n      <DayCellRoot date={date} dateProfile={dateProfile} todayRange={todayRange} elRef={this.handlePopoverEl}>\n        {(rootElRef, dayClassNames, dataAttrs) => (\n          <Popover\n            elRef={rootElRef}\n            title={title}\n            extraClassNames={['fc-more-popover'].concat(dayClassNames)}\n            extraAttrs={dataAttrs}\n            onClose={props.onCloseClick}\n            alignmentEl={props.alignmentEl}\n            topAlignmentEl={props.topAlignmentEl}\n          >\n            <DayCellContent date={date} dateProfile={dateProfile} todayRange={todayRange}>\n              {(innerElRef, innerContent) => (\n                innerContent &&\n                  <div className=\"fc-more-popover-misc\" ref={innerElRef}>{innerContent}</div>\n              )}\n            </DayCellContent>\n            {props.segs.map((seg) => {\n              let instanceId = seg.eventRange.instance.instanceId\n\n              return (\n                <div\n                  className=\"fc-daygrid-event-harness\"\n                  key={instanceId}\n                  style={{\n                    visibility: hiddenInstances[instanceId] ? 'hidden' : ('' as any),\n                  }}\n                >\n                  {hasListItemDisplay(seg) ? (\n                    <TableListItemEvent\n                      seg={seg}\n                      isDragging={false}\n                      isSelected={instanceId === selectedInstanceId}\n                      defaultDisplayEventEnd={false}\n                      {...getSegMeta(seg, todayRange)}\n                    />\n                  ) : (\n                    <TableBlockEvent\n                      seg={seg}\n                      isDragging={false}\n                      isResizing={false}\n                      isDateSelecting={false}\n                      isSelected={instanceId === selectedInstanceId}\n                      defaultDisplayEventEnd={false}\n                      {...getSegMeta(seg, todayRange)}\n                    />\n                  )}\n                </div>\n              )\n            })}\n          </Popover>\n        )}\n      </DayCellRoot>\n    )\n  }\n\n  handlePopoverEl = (popoverEl: HTMLElement | null) => {\n    this.popoverEl = popoverEl\n\n    if (popoverEl) {\n      this.context.registerInteractiveComponent(this, {\n        el: popoverEl,\n        useEventCenter: false,\n      })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  queryHit(positionLeft: number, positionTop: number, elWidth: number, elHeight: number): Hit | null {\n    let date = this.props.date\n\n    if (positionLeft < elWidth && positionTop < elHeight) {\n      return {\n        component: this,\n        dateSpan: {\n          allDay: true,\n          range: { start: date, end: addDays(date, 1) },\n        },\n        dayEl: this.popoverEl,\n        rect: {\n          left: 0,\n          top: 0,\n          right: elWidth,\n          bottom: elHeight,\n        },\n        layer: 1,\n      }\n    }\n\n    return null\n  }\n\n  isPopover() {\n    return true // gross\n  }\n}\n","import {\n  EventSegUiInteractionState,\n  VNode,\n  DateComponent,\n  RefObject,\n  CssDimValue,\n  createElement,\n  PositionCache,\n  Ref,\n  memoize,\n  addDays,\n  RefMap,\n  setRef,\n  DateRange,\n  NowTimer,\n  DateMarker,\n  EventApi,\n  DateProfile,\n  Fragment,\n} from '@fullcalendar/common'\nimport { TableSeg, splitSegsByRow, splitInteractionByRow } from './TableSeg'\nimport { TableRow } from './TableRow'\nimport { TableCellModel, MoreLinkArg } from './TableCell'\nimport { MorePopover } from './MorePopover'\nimport { MoreLinkAction } from './more-link'\n\nexport interface TableProps {\n  elRef?: Ref<HTMLDivElement>\n  dateProfile: DateProfile\n  cells: TableCellModel[][] // cells-BY-ROW\n  renderRowIntro?: () => VNode\n  colGroupNode: VNode\n  tableMinWidth: CssDimValue\n  expandRows: boolean\n  showWeekNumbers: boolean\n  clientWidth: number | null\n  clientHeight: number | null\n  businessHourSegs: TableSeg[]\n  bgEventSegs: TableSeg[]\n  fgEventSegs: TableSeg[]\n  dateSelectionSegs: TableSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  headerAlignElRef?: RefObject<HTMLElement>\n  forPrint: boolean\n}\n\ninterface TableState {\n  morePopoverState: MorePopoverState | null\n}\n\ninterface MorePopoverState extends MoreLinkArg {\n  currentFgEventSegs: TableSeg[]\n}\n\nexport class Table extends DateComponent<TableProps, TableState> {\n  private splitBusinessHourSegs = memoize(splitSegsByRow)\n  private splitBgEventSegs = memoize(splitSegsByRow)\n  private splitFgEventSegs = memoize(splitSegsByRow)\n  private splitDateSelectionSegs = memoize(splitSegsByRow)\n  private splitEventDrag = memoize(splitInteractionByRow)\n  private splitEventResize = memoize(splitInteractionByRow)\n  private buildBuildMoreLinkText = memoize(buildBuildMoreLinkText)\n  private rootEl: HTMLElement\n  private rowRefs = new RefMap<TableRow>()\n  private rowPositions: PositionCache\n  private colPositions: PositionCache\n\n  state = {\n    morePopoverState: null,\n  }\n\n  render() {\n    let { props } = this\n    let { dateProfile, dayMaxEventRows, dayMaxEvents, expandRows } = props\n    let { morePopoverState } = this.state\n    let rowCnt = props.cells.length\n\n    let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt)\n    let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt)\n    let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt)\n    let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt)\n    let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt)\n    let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt)\n    let buildMoreLinkText = this.buildBuildMoreLinkText(this.context.options.moreLinkText)\n\n    let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true\n\n    // if rows can't expand to fill fixed height, can't do balanced-height event limit\n    // TODO: best place to normalize these options?\n    if (limitViaBalanced && !expandRows) {\n      limitViaBalanced = false\n      dayMaxEventRows = null\n      dayMaxEvents = null\n    }\n\n    let classNames = [\n      'fc-daygrid-body',\n      limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', // will all row heights be equal?\n      expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n    ]\n\n    return (\n      <div\n        className={classNames.join(' ')}\n        ref={this.handleRootEl}\n        style={{\n          // these props are important to give this wrapper correct dimensions for interactions\n          // TODO: if we set it here, can we avoid giving to inner tables?\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth,\n        }}\n      >\n        <NowTimer unit=\"day\">\n          {(nowDate: DateMarker, todayRange: DateRange) => (\n            <Fragment>\n              <table\n                className=\"fc-scrollgrid-sync-table\"\n                style={{\n                  width: props.clientWidth,\n                  minWidth: props.tableMinWidth,\n                  height: expandRows ? props.clientHeight : '',\n                }}\n              >\n                {props.colGroupNode}\n                <tbody>\n                  {props.cells.map((cells, row) => (\n                    <TableRow\n                      ref={this.rowRefs.createRef(row)}\n                      key={\n                        cells.length\n                          ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                          : row // in case there are no cells (like when resource view is loading)\n                      }\n                      showDayNumbers={rowCnt > 1}\n                      showWeekNumbers={props.showWeekNumbers}\n                      todayRange={todayRange}\n                      dateProfile={dateProfile}\n                      cells={cells}\n                      renderIntro={props.renderRowIntro}\n                      businessHourSegs={businessHourSegsByRow[row]}\n                      eventSelection={props.eventSelection}\n                      bgEventSegs={bgEventSegsByRow[row].filter(isSegAllDay) /* hack */}\n                      fgEventSegs={fgEventSegsByRow[row]}\n                      dateSelectionSegs={dateSelectionSegsByRow[row]}\n                      eventDrag={eventDragByRow[row]}\n                      eventResize={eventResizeByRow[row]}\n                      dayMaxEvents={dayMaxEvents}\n                      dayMaxEventRows={dayMaxEventRows}\n                      clientWidth={props.clientWidth}\n                      clientHeight={props.clientHeight}\n                      buildMoreLinkText={buildMoreLinkText}\n                      onMoreClick={this.handleMoreLinkClick}\n                    />\n                  ))}\n                </tbody>\n              </table>\n              { // clear popover on event mod\n                (!props.forPrint && morePopoverState && morePopoverState.currentFgEventSegs === props.fgEventSegs) && (\n                  <MorePopover\n                    date={morePopoverState.date}\n                    dateProfile={dateProfile}\n                    segs={morePopoverState.allSegs}\n                    alignmentEl={morePopoverState.dayEl}\n                    topAlignmentEl={rowCnt === 1 ? props.headerAlignElRef.current : null}\n                    onCloseClick={this.handleMorePopoverClose}\n                    selectedInstanceId={props.eventSelection}\n                    hiddenInstances={// yuck\n                      (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n                      (props.eventResize ? props.eventResize.affectedInstances : null) ||\n                      {}\n                    }\n                    todayRange={todayRange}\n                  />\n                )\n              }\n            </Fragment>\n          )}\n        </NowTimer>\n      </div>\n    )\n  }\n\n  handleRootEl = (rootEl: HTMLElement | null) => {\n    this.rootEl = rootEl\n    setRef(this.props.elRef, rootEl)\n  }\n\n  handleMoreLinkClick = (arg: MoreLinkArg) => { // TODO: bad names \"more link click\" versus \"more click\"\n    let { context } = this\n    let { dateEnv } = context\n    let clickOption = context.options.moreLinkClick\n\n    function segForPublic(seg: TableSeg) {\n      let { def, instance, range } = seg.eventRange\n\n      return {\n        event: new EventApi(context, def, instance),\n        start: dateEnv.toDate(range.start),\n        end: dateEnv.toDate(range.end),\n        isStart: seg.isStart,\n        isEnd: seg.isEnd,\n      }\n    }\n\n    if (typeof clickOption === 'function') {\n      clickOption = clickOption({\n        date: dateEnv.toDate(arg.date),\n        allDay: true,\n        allSegs: arg.allSegs.map(segForPublic),\n        hiddenSegs: arg.hiddenSegs.map(segForPublic),\n        jsEvent: arg.ev,\n        view: context.viewApi,\n      }) as (MoreLinkAction | undefined) // hack to handle void\n    }\n\n    if (!clickOption || clickOption === 'popover') {\n      this.setState({\n        morePopoverState: {\n          ...arg,\n          currentFgEventSegs: this.props.fgEventSegs,\n        },\n      })\n    } else if (typeof clickOption === 'string') { // a view name\n      context.calendarApi.zoomTo(arg.date, clickOption)\n    }\n  }\n\n  handleMorePopoverClose = () => {\n    this.setState({\n      morePopoverState: null,\n    })\n  }\n\n  // Hit System\n  // ----------------------------------------------------------------------------------------------------\n\n  prepareHits() {\n    this.rowPositions = new PositionCache(\n      this.rootEl,\n      this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n      false,\n      true, // vertical\n    )\n\n    this.colPositions = new PositionCache(\n      this.rootEl,\n      this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n      true, // horizontal\n      false,\n    )\n  }\n\n  positionToHit(leftPosition, topPosition) {\n    let { colPositions, rowPositions } = this\n    let col = colPositions.leftToIndex(leftPosition)\n    let row = rowPositions.topToIndex(topPosition)\n\n    if (row != null && col != null) {\n      return {\n        row,\n        col,\n        dateSpan: {\n          range: this.getCellRange(row, col),\n          allDay: true,\n        },\n        dayEl: this.getCellEl(row, col),\n        relativeRect: {\n          left: colPositions.lefts[col],\n          right: colPositions.rights[col],\n          top: rowPositions.tops[row],\n          bottom: rowPositions.bottoms[row],\n        },\n      }\n    }\n\n    return null\n  }\n\n  private getCellEl(row, col) {\n    return this.rowRefs.currentMap[row].getCellEls()[col] // TODO: not optimal\n  }\n\n  private getCellRange(row, col) {\n    let start = this.props.cells[row][col].date\n    let end = addDays(start, 1)\n    return { start, end }\n  }\n}\n\nfunction buildBuildMoreLinkText(moreLinkTextInput): (num: number) => string {\n  if (typeof moreLinkTextInput === 'function') {\n    return moreLinkTextInput\n  }\n\n  return (num) => `+${num} ${moreLinkTextInput}`\n}\n\nfunction isSegAllDay(seg: TableSeg) {\n  return seg.eventRange.def.allDay\n}\n","import { DayTableModel, DateRange, Slicer } from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport class DayTableSlicer extends Slicer<TableSeg, [DayTableModel]> {\n  forceDayIfListItem = true\n\n  sliceRange(dateRange: DateRange, dayTableModel: DayTableModel): TableSeg[] {\n    return dayTableModel.sliceRange(dateRange)\n  }\n}\n","import {\n  createElement, createRef, VNode,\n  EventStore,\n  EventUiHash,\n  DateSpan,\n  EventInteractionState,\n  DayTableModel,\n  Duration,\n  DateComponent,\n  ViewContext,\n  RefObject,\n  CssDimValue,\n  Hit,\n  DateProfile,\n} from '@fullcalendar/common'\nimport { Table } from './Table'\nimport { DayTableSlicer } from './DayTableSlicer'\n\nexport interface DayTableProps {\n  dateProfile: DateProfile,\n  dayTableModel: DayTableModel\n  nextDayThreshold: Duration\n  businessHours: EventStore\n  eventStore: EventStore\n  eventUiBases: EventUiHash\n  dateSelection: DateSpan | null\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  colGroupNode: VNode\n  tableMinWidth: CssDimValue\n  renderRowIntro?: () => VNode\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  expandRows: boolean\n  showWeekNumbers: boolean\n  headerAlignElRef?: RefObject<HTMLElement> // for more popover alignment\n  clientWidth: number | null\n  clientHeight: number | null\n  forPrint: boolean\n}\n\nexport class DayTable extends DateComponent<DayTableProps, ViewContext> {\n  private slicer = new DayTableSlicer()\n  private tableRef = createRef<Table>()\n\n  render() {\n    let { props, context } = this\n\n    return (\n      <Table\n        ref={this.tableRef}\n        elRef={this.handleRootEl}\n        {...this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel)}\n        dateProfile={props.dateProfile}\n        cells={props.dayTableModel.cells}\n        colGroupNode={props.colGroupNode}\n        tableMinWidth={props.tableMinWidth}\n        renderRowIntro={props.renderRowIntro}\n        dayMaxEvents={props.dayMaxEvents}\n        dayMaxEventRows={props.dayMaxEventRows}\n        showWeekNumbers={props.showWeekNumbers}\n        expandRows={props.expandRows}\n        headerAlignElRef={props.headerAlignElRef}\n        clientWidth={props.clientWidth}\n        clientHeight={props.clientHeight}\n        forPrint={props.forPrint}\n      />\n    )\n  }\n\n  handleRootEl = (rootEl: HTMLDivElement | null) => {\n    if (rootEl) {\n      this.context.registerInteractiveComponent(this, { el: rootEl })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  prepareHits() {\n    this.tableRef.current.prepareHits()\n  }\n\n  queryHit(positionLeft: number, positionTop: number): Hit {\n    let rawHit = this.tableRef.current.positionToHit(positionLeft, positionTop)\n\n    if (rawHit) {\n      return {\n        component: this,\n        dateSpan: rawHit.dateSpan,\n        dayEl: rawHit.dayEl,\n        rect: {\n          left: rawHit.relativeRect.left,\n          right: rawHit.relativeRect.right,\n          top: rawHit.relativeRect.top,\n          bottom: rawHit.relativeRect.bottom,\n        },\n        layer: 0,\n      }\n    }\n\n    return null\n  }\n}\n","import {\n  createElement, createRef,\n  DayHeader,\n  DateProfileGenerator,\n  DateProfile,\n  memoize,\n  DaySeriesModel,\n  DayTableModel,\n  ChunkContentCallbackArgs,\n} from '@fullcalendar/common'\nimport { TableView } from './TableView'\nimport { DayTable } from './DayTable'\n\nexport class DayTableView extends TableView {\n  private buildDayTableModel = memoize(buildDayTableModel)\n  private headerRef = createRef<DayHeader>()\n  private tableRef = createRef<DayTable>()\n\n  render() {\n    let { options, dateProfileGenerator } = this.context\n    let { props } = this\n    let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator)\n\n    let headerContent = options.dayHeaders && (\n      <DayHeader\n        ref={this.headerRef}\n        dateProfile={props.dateProfile}\n        dates={dayTableModel.headerDates}\n        datesRepDistinctDays={dayTableModel.rowCnt === 1}\n      />\n    )\n\n    let bodyContent = (contentArg: ChunkContentCallbackArgs) => (\n      <DayTable\n        ref={this.tableRef}\n        dateProfile={props.dateProfile}\n        dayTableModel={dayTableModel}\n        businessHours={props.businessHours}\n        dateSelection={props.dateSelection}\n        eventStore={props.eventStore}\n        eventUiBases={props.eventUiBases}\n        eventSelection={props.eventSelection}\n        eventDrag={props.eventDrag}\n        eventResize={props.eventResize}\n        nextDayThreshold={options.nextDayThreshold}\n        colGroupNode={contentArg.tableColGroupNode}\n        tableMinWidth={contentArg.tableMinWidth}\n        dayMaxEvents={options.dayMaxEvents}\n        dayMaxEventRows={options.dayMaxEventRows}\n        showWeekNumbers={options.weekNumbers}\n        expandRows={!props.isHeightAuto}\n        headerAlignElRef={this.headerElRef}\n        clientWidth={contentArg.clientWidth}\n        clientHeight={contentArg.clientHeight}\n        forPrint={props.forPrint}\n      />\n    )\n\n    return options.dayMinWidth\n      ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n      : this.renderSimpleLayout(headerContent, bodyContent)\n  }\n}\n\nexport function buildDayTableModel(dateProfile: DateProfile, dateProfileGenerator: DateProfileGenerator) {\n  let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator)\n\n  return new DayTableModel(\n    daySeries,\n    /year|month|week/.test(dateProfile.currentRangeUnit),\n  )\n}\n","import {\n  DateProfileGenerator,\n  addWeeks, diffWeeks,\n  DateRange,\n} from '@fullcalendar/common'\n\nexport class TableDateProfileGenerator extends DateProfileGenerator {\n  // Computes the date range that will be rendered.\n  buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay): DateRange {\n    let { dateEnv } = this.props\n    let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay)\n    let start = renderRange.start\n    let end = renderRange.end\n    let endOfWeek\n\n    // year and month views should be aligned with weeks. this is already done for week\n    if (/^(year|month)$/.test(currentRangeUnit)) {\n      start = dateEnv.startOfWeek(start)\n\n      // make end-of-week if not already\n      endOfWeek = dateEnv.startOfWeek(end)\n      if (endOfWeek.valueOf() !== end.valueOf()) {\n        end = addWeeks(endOfWeek, 1)\n      }\n    }\n\n    // ensure 6 weeks\n    if (\n      this.props.monthMode &&\n      this.props.fixedWeekCount\n    ) {\n      let rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n        diffWeeks(start, end),\n      )\n      end = addWeeks(end, 6 - rowCnt)\n    }\n\n    return { start, end }\n  }\n}\n","import { identity, Identity, ClassNamesGenerator, CustomContentGenerator, DidMountHandler, WillUnmountHandler } from '@fullcalendar/common'\n\n// public\nimport {\n  MoreLinkContentArg,\n  MoreLinkMountArg,\n  MoreLinkAction,\n} from './api-type-deps'\n\nexport const OPTION_REFINERS = {\n  moreLinkClick: identity as Identity<MoreLinkAction>,\n  moreLinkClassNames: identity as Identity<ClassNamesGenerator<MoreLinkContentArg>>,\n  moreLinkContent: identity as Identity<CustomContentGenerator<MoreLinkContentArg>>,\n  moreLinkDidMount: identity as Identity<DidMountHandler<MoreLinkMountArg>>,\n  moreLinkWillUnmount: identity as Identity<WillUnmountHandler<MoreLinkMountArg>>,\n}\n","import { createPlugin } from '@fullcalendar/common'\nimport { DayTableView } from './DayTableView'\nimport { TableDateProfileGenerator } from './TableDateProfileGenerator'\nimport { OPTION_REFINERS } from './options'\nimport './options-declare'\nimport './main.css'\n\nexport * from './api-type-deps'\nexport { DayTable } from './DayTable'\nexport { DayTableSlicer } from './DayTableSlicer'\nexport { Table } from './Table'\nexport { TableSeg } from './TableSeg'\nexport { TableCellModel } from './TableCell'\nexport { TableView } from './TableView'\nexport { buildDayTableModel } from './DayTableView'\nexport { DayTableView as DayGridView } // export as old name!\n\nexport default createPlugin({\n  initialView: 'dayGridMonth',\n  optionRefiners: OPTION_REFINERS,\n  views: {\n\n    dayGrid: {\n      component: DayTableView,\n      dateProfileGeneratorClass: TableDateProfileGenerator,\n    },\n\n    dayGridDay: {\n      type: 'dayGrid',\n      duration: { days: 1 },\n    },\n\n    dayGridWeek: {\n      type: 'dayGrid',\n      duration: { weeks: 1 },\n    },\n\n    dayGridMonth: {\n      type: 'dayGrid',\n      duration: { months: 1 },\n      monthMode: true,\n      fixedWeekCount: true,\n    },\n\n  },\n})\n"]},"metadata":{},"sourceType":"module"}