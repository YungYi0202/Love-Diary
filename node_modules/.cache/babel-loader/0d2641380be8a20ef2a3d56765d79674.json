{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Diary/DiaryContent.js\",\n    _s = $RefreshSig$();\n\nimport { Rate } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { FrownOutlined, MehOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nconst API_ROOT = 'http://localhost:4000/api';\nconst instance = axios.create({\n  baseURL: API_ROOT\n});\nconst customIcons = {\n  1: /*#__PURE__*/_jsxDEV(FrownOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 8\n  }, this),\n  2: /*#__PURE__*/_jsxDEV(FrownOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 8\n  }, this),\n  3: /*#__PURE__*/_jsxDEV(MehOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 8\n  }, this),\n  4: /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 8\n  }, this),\n  5: /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 8\n  }, this)\n};\nexport default function DiaryContent({\n  dateStr,\n  accountId\n}) {\n  _s();\n\n  const [mood, setMood] = useState(3);\n  const [text, setText] = useState(\"\");\n  const [isInDatabase, setIsInDatabase] = useState(false);\n\n  const mood_onChange = v => {\n    setMood(v);\n    setIsInDatabase(false);\n  };\n\n  const text_onChange = e => {\n    //console.log(e.target.value);\n    setText(e.target.value);\n    setIsInDatabase(false);\n  };\n\n  const _getContent = async () => {\n    const {\n      data: {\n        message,\n        content\n      }\n    } = await instance.get('/getContent', {\n      params: {\n        accountId,\n        dateStr\n      }\n    });\n\n    if (message === \"exist\") {\n      console.log(content);\n      setMood(content.mood);\n      setText(content.text);\n      setIsInDatabase(true);\n    } else {}\n  };\n\n  const _addContent = async () => {\n    const {\n      data: {\n        message\n      }\n    } = await instance.post('/addContent', {\n      params: {\n        accountId,\n        dateStr,\n        mood,\n        text\n      }\n    });\n  };\n\n  const _updateContent = async () => {\n    const {\n      data: {\n        message\n      }\n    } = await instance.post('/updateContent', {\n      params: {\n        accountId,\n        dateStr,\n        mood,\n        text\n      }\n    });\n  };\n\n  const onSave = () => {\n    if (isInDatabase) {\n      _updateContent();\n    } else {\n      _addContent();\n    }\n  };\n\n  useEffect(() => {\n    _getContent();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today font_J\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today_title\",\n        children: \"Today : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today_date\",\n        children: dateStr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Rate, {\n      value: mood,\n      onChange: mood_onChange,\n      character: ({\n        index\n      }) => customIcons[index + 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Record your beautiful Love Memory...\",\n      rows: \"12\",\n      cols: \"40\",\n      onChange: text_onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSave,\n      children: \"save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n} //{dateStr.substr(0,4)}/{dateStr.substr(5,2)}/{dateStr.substr(8,2)}\n\n_s(DiaryContent, \"AllJ3ztNxe5nH/sCnCuiCWV9W50=\");\n\n_c = DiaryContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiaryContent\");","map":{"version":3,"sources":["/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Diary/DiaryContent.js"],"names":["Rate","React","useEffect","useState","FrownOutlined","MehOutlined","SmileOutlined","axios","API_ROOT","instance","create","baseURL","customIcons","DiaryContent","dateStr","accountId","mood","setMood","text","setText","isInDatabase","setIsInDatabase","mood_onChange","v","text_onChange","e","target","value","_getContent","data","message","content","get","params","console","log","_addContent","post","_updateContent","onSave","index"],"mappings":"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","sourcesContent":["import { Rate } from 'antd';\nimport React , {useEffect, useState} from  'react' ; \nimport { FrownOutlined, MehOutlined, SmileOutlined } from '@ant-design/icons';\n\nimport axios from 'axios'\n\nconst API_ROOT = 'http://localhost:4000/api'\nconst instance = axios.create({\n  baseURL: API_ROOT\n})\n\nconst customIcons = {\n    1: <FrownOutlined />,\n    2: <FrownOutlined />,\n    3: <MehOutlined />,\n    4: <SmileOutlined />,\n    5: <SmileOutlined />,\n  };\n\nexport default function DiaryContent({dateStr, accountId}){\n    const [mood, setMood] = useState(3);\n    const [text, setText] = useState(\"\");\n    const [isInDatabase, setIsInDatabase] = useState(false);\n\n    const mood_onChange = (v) =>{\n        setMood(v);\n        setIsInDatabase(false);\n    }\n    \n    const text_onChange = (e) => {\n        //console.log(e.target.value);\n        setText(e.target.value);\n        setIsInDatabase(false);\n    }\n\n    const _getContent = async () => {\n        const {\n            data: { message, content}\n        } = await instance.get('/getContent',{ params: { accountId, dateStr}});\n        if(message===\"exist\"){\n            console.log(content);\n            setMood(content.mood);\n            setText(content.text);\n            setIsInDatabase(true);\n        }else{\n            \n        }\n    }\n\n    const _addContent = async () =>{\n        const {\n            data: { message}\n        } = await instance.post('/addContent',{ params: { accountId, dateStr, mood, text}});\n    }\n\n    const _updateContent = async () => {\n        const {\n            data: { message}\n        } = await instance.post('/updateContent',{ params: { accountId, dateStr, mood, text}});\n    }\n\n    const onSave = () =>{\n        if(isInDatabase){\n            _updateContent();\n        }else{\n            _addContent();\n        }\n    }\n\n    useEffect(()=>{\n        _getContent();\n    },[]);\n\n    return(\n        <div>\n        <div className=\"today font_J\">\n            <div className=\"today_title\">Today : </div>\n            <div className=\"today_date\">{dateStr}</div>\n        </div>\n        <Rate value={mood} onChange={mood_onChange}character={({ index }) => customIcons[index + 1]}></Rate>\n        <textarea placeholder=\"Record your beautiful Love Memory...\"\n            rows=\"12\" cols=\"40\"\n            onChange = {text_onChange}\n        ></textarea>\n        <button onClick={onSave}>save</button>\n        </div>\n    )\n}\n//{dateStr.substr(0,4)}/{dateStr.substr(5,2)}/{dateStr.substr(8,2)}"]},"metadata":{},"sourceType":"module"}