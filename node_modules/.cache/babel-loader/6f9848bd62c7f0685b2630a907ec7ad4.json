{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Diary/PicturesWall.js\";\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { React, Component, useState } from 'react';\nimport { Input } from 'antd';\nconst {\n  TextArea\n} = Input;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass TextInput extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n\n    this.onChange = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        value\n      });\n    };\n  }\n\n  render() {\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(TextArea, {\n      value: value,\n      onChange: this.onChange,\n      placeholder: \"Something with this image.\",\n      autoSize: {\n        minRows: 3,\n        maxRows: 3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default class PicturesWall extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      previewTitle: '',\n      fileList: []\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true // previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\n\n      });\n    };\n\n    this.handleChange = ({\n      fileList\n    }) => {\n      console.log(fileList);\n      this.setState({\n        fileList\n      });\n    };\n  }\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList,\n      previewTitle\n    } = this.state;\n\n    const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 8\n        },\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Upload, {\n        action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n        listType: \"picture-card\",\n        fileList: fileList,\n        onPreview: this.handlePreview,\n        onChange: this.handleChange,\n        className: \"photo\",\n        children: fileList.length >= 1 ? null : uploadButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: previewVisible,\n        title: previewTitle,\n        footer: null,\n        onCancel: this.handleCancel,\n        className: \"photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"photo\",\n          style: {\n            width: '100%'\n          },\n          src: previewImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Diary/PicturesWall.js"],"names":["Upload","Modal","PlusOutlined","React","Component","useState","Input","TextArea","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","TextInput","state","value","onChange","target","setState","render","minRows","maxRows","PicturesWall","previewVisible","previewImage","previewTitle","fileList","handleCancel","handlePreview","url","preview","originFileObj","handleChange","console","log","uploadButton","marginTop","length","width"],"mappings":"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","sourcesContent":["import { Upload, Modal } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport {React, Component, useState} from 'react';\nimport { Input } from 'antd';\n\n\nconst { TextArea } = Input;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass TextInput extends Component {\n  state = {\n    value: '',\n  };\n\n  onChange = ({ target: { value } }) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n        <TextArea\n          value={value}\n          onChange={this.onChange}\n          placeholder=\"Something with this image.\"\n          autoSize={{ minRows: 3, maxRows: 3 }}\n        />\n    );\n  }\n}\n\n\nexport default class PicturesWall extends Component {\n  state = {\n    previewVisible: false,\n    previewImage: '',\n    previewTitle: '',\n    fileList: [],\n  };\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n      // previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\n    });\n  };\n\n  handleChange = ({ fileList }) => {\n    console.log(fileList);\n    this.setState({ fileList });\n  }\n\n  render() {\n    const { previewVisible, previewImage, fileList, previewTitle } = this.state;\n    const uploadButton = (\n      <div>\n        <PlusOutlined />\n        <div style={{ marginTop: 8 }}>Upload</div>\n      </div>\n    );\n    return (\n      <>\n        <Upload\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n          listType=\"picture-card\"\n          fileList={fileList}\n          onPreview={this.handlePreview}\n          onChange={this.handleChange}\n          className=\"photo\"\n        >\n          {fileList.length >= 1 ? null : uploadButton}\n        </Upload>\n        <Modal\n          visible={previewVisible}\n          title={previewTitle}\n          footer={null}\n          onCancel={this.handleCancel}\n          className=\"photo\"\n        >\n          <img alt=\"photo\" style={{ width: '100%' }} src={previewImage} />\n        </Modal>\n        <TextInput />\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}