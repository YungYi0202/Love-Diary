{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Diary/PicturesWall.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport axios from 'axios';\nconst API_ROOT = 'http://localhost:4000/api';\nconst instance = axios.create({\n  baseURL: API_ROOT\n});\nexport default function PicturesWall({\n  dateStr,\n  accountId,\n  photoText,\n  photoText_onChange\n}) {\n  _s();\n\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [isInDatabase, setIsInDatabase] = useState(false);\n\n  const _getPhoto = async () => {\n    const {\n      data: {\n        message,\n        url\n      }\n    } = await instance.get('/getPhoto', {\n      params: {\n        accountId,\n        dateStr\n      }\n    }); //console.log(\"backend url:\");\n    //console.log(url);\n\n    if (message === \"exist\") {\n      setImageUrl(url);\n      setIsInDatabase(true);\n    } else {\n      setImageUrl(\"\");\n      setIsInDatabase(false);\n    }\n  };\n\n  const _addPhoto = async photoURL => {\n    const {\n      data: {\n        message\n      }\n    } = await instance.post('/addPhoto', {\n      params: {\n        accountId,\n        dateStr,\n        photoURL\n      }\n    });\n    if (message === \"success\") setIsInDatabase(true);\n  };\n\n  const _updatePhoto = async photoURL => {\n    const {\n      data: {\n        message\n      }\n    } = await instance.post('/updatePhoto', {\n      params: {\n        accountId,\n        dateStr,\n        photoURL\n      }\n    });\n    if (message === \"error\") alert(\"update photo error\");\n  };\n\n  useEffect(() => {\n    if (dateStr !== undefined) {\n      //console.log(\"useEffect\");\n      _getPhoto();\n    }\n  }, [dateStr]);\n\n  const uploadImage = ({}) => {\n    if (window.confirm(\"Upload ?\")) {\n      const r = new XMLHttpRequest();\n      const d = new FormData();\n      const e = document.getElementsByClassName('input-image')[0].files[0];\n      var u;\n      d.append('image', e);\n      r.open('POST', 'https://api.imgur.com/3/image/');\n      r.setRequestHeader('Authorization', `Client-ID 4e3b0d0edce7854`);\n\n      r.onreadystatechange = function () {\n        if (r.status === 200 && r.readyState === 4) {\n          let res = JSON.parse(r.responseText);\n          u = `https://i.imgur.com/${res.data.id}.png`;\n        }\n\n        setImageUrl(u);\n\n        if (u !== \"\") {\n          if (isInDatabase) {\n            console.log(\"_update\");\n\n            _updatePhoto(u);\n          } else {\n            console.log(\"_add\");\n\n            _addPhoto(u);\n          }\n        }\n      };\n\n      r.send(d);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"uploadPhoto\",\n      children: [imageUrl ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        className: \"butn font_s\",\n        value: \"Change Photo !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        className: \"butn font_s\",\n        value: \"Upload Photo !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"input-image\",\n        onChange: uploadImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"photo midd\",\n      alt: \"photo\",\n      src: imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pic_contect_back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: photoText,\n      onChange: photoText_onChange,\n      className: \"pic_contect font_F\",\n      placeholder: \"Someting about the photo...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PicturesWall, \"S8TquenKjl9B0N8YVq3STnwsg+o=\");\n\n_c = PicturesWall;\n\nvar _c;\n\n$RefreshReg$(_c, \"PicturesWall\");","map":{"version":3,"sources":["/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Diary/PicturesWall.js"],"names":["React","useState","useEffect","axios","API_ROOT","instance","create","baseURL","PicturesWall","dateStr","accountId","photoText","photoText_onChange","imageUrl","setImageUrl","isInDatabase","setIsInDatabase","_getPhoto","data","message","url","get","params","_addPhoto","photoURL","post","_updatePhoto","alert","undefined","uploadImage","window","confirm","r","XMLHttpRequest","d","FormData","e","document","getElementsByClassName","files","u","append","open","setRequestHeader","onreadystatechange","status","readyState","res","JSON","parse","responseText","id","console","log","send"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react';\nimport axios from 'axios'\n\nconst API_ROOT = 'http://localhost:4000/api'\nconst instance = axios.create({\n  baseURL: API_ROOT\n})\nexport default function PicturesWall({dateStr, accountId, photoText, photoText_onChange}){\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [isInDatabase, setIsInDatabase] = useState(false);\n\n    const _getPhoto = async() =>{\n        const {\n            data: { message, url}\n        } = await instance.get('/getPhoto',{ params: { accountId, dateStr}});\n        //console.log(\"backend url:\");\n        //console.log(url);\n        if(message===\"exist\"){\n            setImageUrl(url);\n            setIsInDatabase(true);\n        }else{\n            setImageUrl(\"\");\n            setIsInDatabase(false);\n        }\n    }\n\n    const _addPhoto = async(photoURL)=>{\n      const {\n          data: { message}\n      } = await instance.post('/addPhoto',{ params: { accountId, dateStr, photoURL}});\n      if(message===\"success\") setIsInDatabase(true);\n    }\n\n    const _updatePhoto = async(photoURL)=>{\n      const {\n          data: { message}\n      } = await instance.post('/updatePhoto',{ params: { accountId, dateStr, photoURL}});\n      if(message === \"error\") alert(\"update photo error\")\n    }\n\n    useEffect(()=>{\n      if(dateStr!==undefined){\n          //console.log(\"useEffect\");\n          _getPhoto();\n      }\n    },[dateStr]);\n\n    \n  const uploadImage = ({}) => {\n    if(window.confirm(\"Upload ?\")){\n      const r = new XMLHttpRequest()\n      const d = new FormData()\n      const e = document.getElementsByClassName('input-image')[0].files[0]\n      var u\n\n      d.append('image', e)\n\n      r.open('POST', 'https://api.imgur.com/3/image/')\n      r.setRequestHeader('Authorization', `Client-ID 4e3b0d0edce7854`)\n      r.onreadystatechange = function () {\n        if(r.status === 200 && r.readyState === 4) {\n          let res = JSON.parse(r.responseText)\n          u = `https://i.imgur.com/${res.data.id}.png`\n        }      \n        setImageUrl(u);\n        if(u!==\"\"){\n          if(isInDatabase){\n            console.log(\"_update\")\n            _updatePhoto(u);\n          }else{\n            console.log(\"_add\")\n            _addPhoto(u);\n          }\n        }\n        \n      }\n      r.send(d);\n    }  \n  }\n\n  return (\n    <div>\n      <label className=\"uploadPhoto\">\n        {imageUrl? \n          <input type=\"button\" className=\"butn font_s\" value=\"Change Photo !\"/>:\n          <input type=\"button\" className=\"butn font_s\" value=\"Upload Photo !\"/>\n        }\n        <input type=\"file\" className=\"input-image\" onChange={uploadImage}/>\n      </label>\n      {imageUrl? <img className=\"photo midd\" alt=\"photo\" src={imageUrl}/>:<></>}\n      <div className=\"pic_contect_back\"></div>\n      <textarea value={photoText} onChange={photoText_onChange} className=\"pic_contect font_F\" placeholder=\"Someting about the photo...\"></textarea>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}