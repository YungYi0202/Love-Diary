{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Diary/DiaryContent.js\",\n    _s = $RefreshSig$();\n\nimport { Rate, Input } from 'antd';\nimport React, { Component, useEffect, useState } from 'react';\nimport { FrownOutlined, MehOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nconst API_ROOT = 'http://localhost:4000/api';\nconst instance = axios.create({\n  baseURL: API_ROOT\n});\nconst customIcons = {\n  1: /*#__PURE__*/_jsxDEV(FrownOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 8\n  }, this),\n  2: /*#__PURE__*/_jsxDEV(FrownOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 8\n  }, this),\n  3: /*#__PURE__*/_jsxDEV(MehOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 8\n  }, this),\n  4: /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 8\n  }, this),\n  5: /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 8\n  }, this)\n};\n\nclass TextInput extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n\n    this.onChange = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        value\n      });\n    };\n  }\n\n  render() {\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(TextArea, {\n      value: value,\n      onChange: this.onChange,\n      placeholder: \"Something with this image.\",\n      autoSize: {\n        minRows: 3,\n        maxRows: 3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default function DiaryContent({\n  dateStr,\n  accountId\n}) {\n  _s();\n\n  const [mood, setMood] = useState(3);\n  const [text, setText] = useState(\"\");\n  const [isInDatabase, setIsInDatabase] = useState(false);\n\n  const mood_onChange = v => {\n    setMood(v);\n  };\n\n  const text_onChange = e => {\n    //console.log(e.target.value);\n    setText(e.target.value);\n  };\n\n  const _getContent = async () => {\n    const {\n      data: {\n        message,\n        content\n      }\n    } = await instance.get('/getContent', {\n      params: {\n        accountId,\n        dateStr\n      }\n    });\n\n    if (message === \"exist\") {\n      //console.log(content);\n      setMood(content.mood);\n      setText(content.text);\n      setIsInDatabase(true);\n    }\n  };\n\n  const _addContent = async () => {\n    const {\n      data: {\n        message\n      }\n    } = await instance.post('/addContent', {\n      params: {\n        accountId,\n        dateStr,\n        mood,\n        text\n      }\n    });\n    if (message === \"success\") setIsInDatabase(true);\n  };\n\n  const _updateContent = async () => {\n    const {\n      data: {\n        message\n      }\n    } = await instance.post('/updateContent', {\n      params: {\n        accountId,\n        dateStr,\n        mood,\n        text\n      }\n    });\n  };\n\n  const onSave = () => {\n    if (isInDatabase) {\n      _updateContent();\n    } else {\n      _addContent();\n    }\n  };\n\n  useEffect(() => {\n    if (dateStr !== undefined) {\n      _getContent();\n    }\n  }, [dateStr]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today font_J\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today_title\",\n        children: \"Today : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today_date\",\n        children: dateStr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Rate, {\n      value: mood,\n      onChange: mood_onChange,\n      character: ({\n        index\n      }) => customIcons[index + 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Record your beautiful Love Memory...\",\n      rows: \"12\",\n      cols: \"40\",\n      onChange: text_onChange,\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSave,\n      children: \"save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n} //{dateStr.substr(0,4)}/{dateStr.substr(5,2)}/{dateStr.substr(8,2)}\n\n_s(DiaryContent, \"AllJ3ztNxe5nH/sCnCuiCWV9W50=\");\n\n_c = DiaryContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiaryContent\");","map":{"version":3,"sources":["/Users/cathychen/Desktop/WebProgramming/NTU-WebProgramming-FinalProject/love_diary/src/components/Diary/DiaryContent.js"],"names":["Rate","Input","React","Component","useEffect","useState","FrownOutlined","MehOutlined","SmileOutlined","axios","API_ROOT","instance","create","baseURL","customIcons","TextInput","state","value","onChange","target","setState","render","minRows","maxRows","DiaryContent","dateStr","accountId","mood","setMood","text","setText","isInDatabase","setIsInDatabase","mood_onChange","v","text_onChange","e","_getContent","data","message","content","get","params","_addContent","post","_updateContent","onSave","undefined","index"],"mappings":"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","sourcesContent":["import { Rate, Input } from 'antd';\nimport React , {Component, useEffect, useState} from  'react' ; \nimport { FrownOutlined, MehOutlined, SmileOutlined } from '@ant-design/icons';\n\nimport axios from 'axios'\n\nconst API_ROOT = 'http://localhost:4000/api'\nconst instance = axios.create({\n  baseURL: API_ROOT\n})\n\n\n\nconst customIcons = {\n    1: <FrownOutlined />,\n    2: <FrownOutlined />,\n    3: <MehOutlined />,\n    4: <SmileOutlined />,\n    5: <SmileOutlined />,\n  };\n\nclass TextInput extends Component {\n    state = {\n        value: '',\n    };\n\n    onChange = ({ target: { value } }) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { value } = this.state;\n        return (\n            <TextArea\n            value={value}\n            onChange={this.onChange}\n            placeholder=\"Something with this image.\"\n            autoSize={{ minRows: 3, maxRows: 3 }}\n            />\n        );\n    }\n}\n\nexport default function DiaryContent({dateStr, accountId}){\n    const [mood, setMood] = useState(3);\n    const [text, setText] = useState(\"\");\n    const [isInDatabase, setIsInDatabase] = useState(false);\n\n    const mood_onChange = (v) =>{\n        setMood(v);\n    }\n    \n    const text_onChange = (e) => {\n        //console.log(e.target.value);\n        setText(e.target.value);\n    }\n\n    const _getContent = async () => {\n        const {\n            data: { message, content}\n        } = await instance.get('/getContent',{ params: { accountId, dateStr}});\n        if(message===\"exist\"){\n            //console.log(content);\n            setMood(content.mood);\n            setText(content.text);\n            setIsInDatabase(true);\n        }\n    }\n\n    const _addContent = async () =>{\n        const {\n            data: { message}\n        } = await instance.post('/addContent',{ params: { accountId, dateStr, mood, text}});\n        if(message===\"success\")setIsInDatabase(true);\n    }\n\n    const _updateContent = async () => {\n        const {\n            data: { message}\n        } = await instance.post('/updateContent',{ params: { accountId, dateStr, mood, text}});\n    }\n\n    const onSave = () =>{\n        if(isInDatabase){\n            _updateContent();\n        }else{\n            _addContent();\n        }\n    }\n\n    useEffect(()=>{\n        if(dateStr!==undefined){\n            _getContent();\n        }\n    },[dateStr]);\n\n    return(\n        <div>\n        <div className=\"today font_J\">\n            <div className=\"today_title\">Today : </div>\n            <div className=\"today_date\">{dateStr}</div>\n        </div>\n        <Rate value={mood} onChange={mood_onChange}character={({ index }) => customIcons[index + 1]}></Rate>\n\n        <textarea placeholder=\"Record your beautiful Love Memory...\"\n            rows=\"12\" cols=\"40\"\n            onChange = {text_onChange}\n            value={text}\n        ></textarea>\n        <button onClick={onSave}>save</button>\n\n        </div>\n    )\n}\n//{dateStr.substr(0,4)}/{dateStr.substr(5,2)}/{dateStr.substr(8,2)}"]},"metadata":{},"sourceType":"module"}